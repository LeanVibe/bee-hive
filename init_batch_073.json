{
  "batch_id": "init_batch_073",
  "files": [
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/types/__init__.py",
      "current_size_lines": 127,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .model import Model as Model",
        "from .usage import Usage as Usage",
        "from .shared import (",
        "from .message import Message as Message",
        "from .beta_error import BetaError as BetaError",
        "from .completion import Completion as Completion",
        "from .model_info import ModelInfo as ModelInfo",
        "from .text_block import TextBlock as TextBlock",
        "from .text_delta import TextDelta as TextDelta",
        "from .tool_param import ToolParam as ToolParam",
        "from .model_param import ModelParam as ModelParam",
        "from .stop_reason import StopReason as StopReason",
        "from .content_block import ContentBlock as ContentBlock",
        "from .message_param import MessageParam as MessageParam",
        "from .text_citation import TextCitation as TextCitation",
        "from .beta_api_error import BetaAPIError as BetaAPIError",
        "from .metadata_param import MetadataParam as MetadataParam",
        "from .thinking_block import ThinkingBlock as ThinkingBlock",
        "from .thinking_delta import ThinkingDelta as ThinkingDelta",
        "from .tool_use_block import ToolUseBlock as ToolUseBlock",
        "from .citations_delta import CitationsDelta as CitationsDelta",
        "from .signature_delta import SignatureDelta as SignatureDelta",
        "from .input_json_delta import InputJSONDelta as InputJSONDelta",
        "from .text_block_param import TextBlockParam as TextBlockParam",
        "from .tool_union_param import ToolUnionParam as ToolUnionParam",
        "from .image_block_param import ImageBlockParam as ImageBlockParam",
        "from .model_list_params import ModelListParams as ModelListParams",
        "from .server_tool_usage import ServerToolUsage as ServerToolUsage",
        "from .tool_choice_param import ToolChoiceParam as ToolChoiceParam",
        "from .beta_billing_error import BetaBillingError as BetaBillingError",
        "from .message_stop_event import MessageStopEvent as MessageStopEvent",
        "from .beta_error_response import BetaErrorResponse as BetaErrorResponse",
        "from .content_block_param import ContentBlockParam as ContentBlockParam",
        "from .message_delta_event import MessageDeltaEvent as MessageDeltaEvent",
        "from .message_delta_usage import MessageDeltaUsage as MessageDeltaUsage",
        "from .message_start_event import MessageStartEvent as MessageStartEvent",
        "from .text_citation_param import TextCitationParam as TextCitationParam",
        "from .anthropic_beta_param import AnthropicBetaParam as AnthropicBetaParam",
        "from .beta_not_found_error import BetaNotFoundError as BetaNotFoundError",
        "from .document_block_param import DocumentBlockParam as DocumentBlockParam",
        "from .message_stream_event import MessageStreamEvent as MessageStreamEvent",
        "from .message_tokens_count import MessageTokensCount as MessageTokensCount",
        "from .thinking_block_param import ThinkingBlockParam as ThinkingBlockParam",
        "from .tool_use_block_param import ToolUseBlockParam as ToolUseBlockParam",
        "from .url_pdf_source_param import URLPDFSourceParam as URLPDFSourceParam",
        "from .beta_overloaded_error import BetaOverloadedError as BetaOverloadedError",
        "from .beta_permission_error import BetaPermissionError as BetaPermissionError",
        "from .beta_rate_limit_error import BetaRateLimitError as BetaRateLimitError",
        "from .message_create_params import MessageCreateParams as MessageCreateParams",
        "from .server_tool_use_block import ServerToolUseBlock as ServerToolUseBlock",
        "from .thinking_config_param import ThinkingConfigParam as ThinkingConfigParam",
        "from .tool_choice_any_param import ToolChoiceAnyParam as ToolChoiceAnyParam",
        "from .citation_char_location import CitationCharLocation as CitationCharLocation",
        "from .citation_page_location import CitationPageLocation as CitationPageLocation",
        "from .citations_config_param import CitationsConfigParam as CitationsConfigParam",
        "from .raw_message_stop_event import RawMessageStopEvent as RawMessageStopEvent",
        "from .tool_choice_auto_param import ToolChoiceAutoParam as ToolChoiceAutoParam",
        "from .tool_choice_none_param import ToolChoiceNoneParam as ToolChoiceNoneParam",
        "from .tool_choice_tool_param import ToolChoiceToolParam as ToolChoiceToolParam",
        "from .url_image_source_param import URLImageSourceParam as URLImageSourceParam",
        "from .base64_pdf_source_param import Base64PDFSourceParam as Base64PDFSourceParam",
        "from .plain_text_source_param import PlainTextSourceParam as PlainTextSourceParam",
        "from .raw_content_block_delta import RawContentBlockDelta as RawContentBlockDelta",
        "from .raw_message_delta_event import RawMessageDeltaEvent as RawMessageDeltaEvent",
        "from .raw_message_start_event import RawMessageStartEvent as RawMessageStartEvent",
        "from .redacted_thinking_block import RedactedThinkingBlock as RedactedThinkingBlock",
        "from .tool_result_block_param import ToolResultBlockParam as ToolResultBlockParam",
        "from .web_search_result_block import WebSearchResultBlock as WebSearchResultBlock",
        "from .completion_create_params import CompletionCreateParams as CompletionCreateParams",
        "from .content_block_stop_event import ContentBlockStopEvent as ContentBlockStopEvent",
        "from .raw_message_stream_event import RawMessageStreamEvent as RawMessageStreamEvent",
        "from .tool_bash_20250124_param import ToolBash20250124Param as ToolBash20250124Param",
        "from .base64_image_source_param import Base64ImageSourceParam as Base64ImageSourceParam",
        "from .beta_authentication_error import BetaAuthenticationError as BetaAuthenticationError",
        "from .content_block_delta_event import ContentBlockDeltaEvent as ContentBlockDeltaEvent",
        "from .content_block_start_event import ContentBlockStartEvent as ContentBlockStartEvent",
        "from .beta_gateway_timeout_error import BetaGatewayTimeoutError as BetaGatewayTimeoutError",
        "from .beta_invalid_request_error import BetaInvalidRequestError as BetaInvalidRequestError",
        "from .content_block_source_param import ContentBlockSourceParam as ContentBlockSourceParam",
        "from .message_count_tokens_params import MessageCountTokensParams as MessageCountTokensParams",
        "from .server_tool_use_block_param import ServerToolUseBlockParam as ServerToolUseBlockParam",
        "from .citation_char_location_param import CitationCharLocationParam as CitationCharLocationParam",
        "from .citation_page_location_param import CitationPageLocationParam as CitationPageLocationParam",
        "from .raw_content_block_stop_event import RawContentBlockStopEvent as RawContentBlockStopEvent",
        "from .web_search_tool_result_block import WebSearchToolResultBlock as WebSearchToolResultBlock",
        "from .web_search_tool_result_error import WebSearchToolResultError as WebSearchToolResultError",
        "from .cache_control_ephemeral_param import CacheControlEphemeralParam as CacheControlEphemeralParam",
        "from .raw_content_block_delta_event import RawContentBlockDeltaEvent as RawContentBlockDeltaEvent",
        "from .raw_content_block_start_event import RawContentBlockStartEvent as RawContentBlockStartEvent",
        "from .redacted_thinking_block_param import RedactedThinkingBlockParam as RedactedThinkingBlockParam",
        "from .thinking_config_enabled_param import ThinkingConfigEnabledParam as ThinkingConfigEnabledParam",
        "from .web_search_result_block_param import WebSearchResultBlockParam as WebSearchResultBlockParam",
        "from .thinking_config_disabled_param import ThinkingConfigDisabledParam as ThinkingConfigDisabledParam",
        "from .web_search_tool_20250305_param import WebSearchTool20250305Param as WebSearchTool20250305Param",
        "from .citation_content_block_location import CitationContentBlockLocation as CitationContentBlockLocation",
        "from .message_count_tokens_tool_param import MessageCountTokensToolParam as MessageCountTokensToolParam",
        "from .tool_text_editor_20250124_param import ToolTextEditor20250124Param as ToolTextEditor20250124Param",
        "from .tool_text_editor_20250429_param import ToolTextEditor20250429Param as ToolTextEditor20250429Param",
        "from .tool_text_editor_20250728_param import ToolTextEditor20250728Param as ToolTextEditor20250728Param",
        "from .content_block_source_content_param import ContentBlockSourceContentParam as ContentBlockSourceContentParam",
        "from .web_search_tool_result_block_param import WebSearchToolResultBlockParam as WebSearchToolResultBlockParam",
        "from .web_search_tool_request_error_param import WebSearchToolRequestErrorParam as WebSearchToolRequestErrorParam",
        "from .citations_web_search_result_location import CitationsWebSearchResultLocation as CitationsWebSearchResultLocation",
        "from .web_search_tool_result_block_content import WebSearchToolResultBlockContent as WebSearchToolResultBlockContent",
        "from .citation_content_block_location_param import (",
        "from .citation_web_search_result_location_param import (",
        "from .web_search_tool_result_block_param_content_param import ("
      ],
      "estimated_loc_savings": 15,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/resources/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .models import (",
        "from .messages import (",
        "from .completions import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/lib/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/types/beta/__init__.py",
      "current_size_lines": 161,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .beta_usage import BetaUsage as BetaUsage",
        "from .beta_message import BetaMessage as BetaMessage",
        "from .deleted_file import DeletedFile as DeletedFile",
        "from .file_metadata import FileMetadata as FileMetadata",
        "from .beta_container import BetaContainer as BetaContainer",
        "from .beta_model_info import BetaModelInfo as BetaModelInfo",
        "from .beta_text_block import BetaTextBlock as BetaTextBlock",
        "from .beta_text_delta import BetaTextDelta as BetaTextDelta",
        "from .beta_tool_param import BetaToolParam as BetaToolParam",
        "from .beta_stop_reason import BetaStopReason as BetaStopReason",
        "from .file_list_params import FileListParams as FileListParams",
        "from .model_list_params import ModelListParams as ModelListParams",
        "from .beta_content_block import BetaContentBlock as BetaContentBlock",
        "from .beta_message_param import BetaMessageParam as BetaMessageParam",
        "from .beta_text_citation import BetaTextCitation as BetaTextCitation",
        "from .file_upload_params import FileUploadParams as FileUploadParams",
        "from .beta_cache_creation import BetaCacheCreation as BetaCacheCreation",
        "from .beta_metadata_param import BetaMetadataParam as BetaMetadataParam",
        "from .beta_thinking_block import BetaThinkingBlock as BetaThinkingBlock",
        "from .beta_thinking_delta import BetaThinkingDelta as BetaThinkingDelta",
        "from .beta_tool_use_block import BetaToolUseBlock as BetaToolUseBlock",
        "from .beta_citations_delta import BetaCitationsDelta as BetaCitationsDelta",
        "from .beta_signature_delta import BetaSignatureDelta as BetaSignatureDelta",
        "from .beta_input_json_delta import BetaInputJSONDelta as BetaInputJSONDelta",
        "from .beta_text_block_param import BetaTextBlockParam as BetaTextBlockParam",
        "from .beta_tool_union_param import BetaToolUnionParam as BetaToolUnionParam",
        "from .message_create_params import MessageCreateParams as MessageCreateParams",
        "from .beta_image_block_param import BetaImageBlockParam as BetaImageBlockParam",
        "from .beta_server_tool_usage import BetaServerToolUsage as BetaServerToolUsage",
        "from .beta_tool_choice_param import BetaToolChoiceParam as BetaToolChoiceParam",
        "from .beta_mcp_tool_use_block import BetaMCPToolUseBlock as BetaMCPToolUseBlock",
        "from .beta_content_block_param import BetaContentBlockParam as BetaContentBlockParam",
        "from .beta_message_delta_usage import BetaMessageDeltaUsage as BetaMessageDeltaUsage",
        "from .beta_text_citation_param import BetaTextCitationParam as BetaTextCitationParam",
        "from .beta_message_tokens_count import BetaMessageTokensCount as BetaMessageTokensCount",
        "from .beta_thinking_block_param import BetaThinkingBlockParam as BetaThinkingBlockParam",
        "from .beta_tool_use_block_param import BetaToolUseBlockParam as BetaToolUseBlockParam",
        "from .beta_url_pdf_source_param import BetaURLPDFSourceParam as BetaURLPDFSourceParam",
        "from .beta_mcp_tool_result_block import BetaMCPToolResultBlock as BetaMCPToolResultBlock",
        "from .beta_server_tool_use_block import BetaServerToolUseBlock as BetaServerToolUseBlock",
        "from .beta_thinking_config_param import BetaThinkingConfigParam as BetaThinkingConfigParam",
        "from .beta_tool_choice_any_param import BetaToolChoiceAnyParam as BetaToolChoiceAnyParam",
        "from .beta_base64_pdf_block_param import BetaBase64PDFBlockParam as BetaBase64PDFBlockParam",
        "from .beta_citation_char_location import BetaCitationCharLocation as BetaCitationCharLocation",
        "from .beta_citation_page_location import BetaCitationPageLocation as BetaCitationPageLocation",
        "from .beta_citations_config_param import BetaCitationsConfigParam as BetaCitationsConfigParam",
        "from .beta_container_upload_block import BetaContainerUploadBlock as BetaContainerUploadBlock",
        "from .beta_raw_message_stop_event import BetaRawMessageStopEvent as BetaRawMessageStopEvent",
        "from .beta_tool_choice_auto_param import BetaToolChoiceAutoParam as BetaToolChoiceAutoParam",
        "from .beta_tool_choice_none_param import BetaToolChoiceNoneParam as BetaToolChoiceNoneParam",
        "from .beta_tool_choice_tool_param import BetaToolChoiceToolParam as BetaToolChoiceToolParam",
        "from .beta_url_image_source_param import BetaURLImageSourceParam as BetaURLImageSourceParam",
        "from .message_count_tokens_params import MessageCountTokensParams as MessageCountTokensParams",
        "from .beta_base64_pdf_source_param import BetaBase64PDFSourceParam as BetaBase64PDFSourceParam",
        "from .beta_file_image_source_param import BetaFileImageSourceParam as BetaFileImageSourceParam",
        "from .beta_plain_text_source_param import BetaPlainTextSourceParam as BetaPlainTextSourceParam",
        "from .beta_raw_content_block_delta import BetaRawContentBlockDelta as BetaRawContentBlockDelta",
        "from .beta_raw_message_delta_event import BetaRawMessageDeltaEvent as BetaRawMessageDeltaEvent",
        "from .beta_raw_message_start_event import BetaRawMessageStartEvent as BetaRawMessageStartEvent",
        "from .beta_redacted_thinking_block import BetaRedactedThinkingBlock as BetaRedactedThinkingBlock",
        "from .beta_tool_result_block_param import BetaToolResultBlockParam as BetaToolResultBlockParam",
        "from .beta_web_search_result_block import BetaWebSearchResultBlock as BetaWebSearchResultBlock",
        "from .beta_mcp_tool_use_block_param import BetaMCPToolUseBlockParam as BetaMCPToolUseBlockParam",
        "from .beta_raw_message_stream_event import BetaRawMessageStreamEvent as BetaRawMessageStreamEvent",
        "from .beta_tool_bash_20241022_param import BetaToolBash20241022Param as BetaToolBash20241022Param",
        "from .beta_tool_bash_20250124_param import BetaToolBash20250124Param as BetaToolBash20250124Param",
        "from .beta_base64_image_source_param import BetaBase64ImageSourceParam as BetaBase64ImageSourceParam",
        "from .beta_search_result_block_param import BetaSearchResultBlockParam as BetaSearchResultBlockParam",
        "from .beta_content_block_source_param import BetaContentBlockSourceParam as BetaContentBlockSourceParam",
        "from .beta_file_document_source_param import BetaFileDocumentSourceParam as BetaFileDocumentSourceParam",
        "from .beta_code_execution_output_block import BetaCodeExecutionOutputBlock as BetaCodeExecutionOutputBlock",
        "from .beta_code_execution_result_block import BetaCodeExecutionResultBlock as BetaCodeExecutionResultBlock",
        "from .beta_server_tool_use_block_param import BetaServerToolUseBlockParam as BetaServerToolUseBlockParam",
        "from .beta_citation_char_location_param import BetaCitationCharLocationParam as BetaCitationCharLocationParam",
        "from .beta_citation_page_location_param import BetaCitationPageLocationParam as BetaCitationPageLocationParam",
        "from .beta_container_upload_block_param import BetaContainerUploadBlockParam as BetaContainerUploadBlockParam",
        "from .beta_raw_content_block_stop_event import BetaRawContentBlockStopEvent as BetaRawContentBlockStopEvent",
        "from .beta_request_document_block_param import BetaRequestDocumentBlockParam as BetaRequestDocumentBlockParam",
        "from .beta_web_search_tool_result_block import BetaWebSearchToolResultBlock as BetaWebSearchToolResultBlock",
        "from .beta_web_search_tool_result_error import BetaWebSearchToolResultError as BetaWebSearchToolResultError",
        "from .beta_cache_control_ephemeral_param import BetaCacheControlEphemeralParam as BetaCacheControlEphemeralParam",
        "from .beta_raw_content_block_delta_event import BetaRawContentBlockDeltaEvent as BetaRawContentBlockDeltaEvent",
        "from .beta_raw_content_block_start_event import BetaRawContentBlockStartEvent as BetaRawContentBlockStartEvent",
        "from .beta_redacted_thinking_block_param import BetaRedactedThinkingBlockParam as BetaRedactedThinkingBlockParam",
        "from .beta_thinking_config_enabled_param import BetaThinkingConfigEnabledParam as BetaThinkingConfigEnabledParam",
        "from .beta_web_search_result_block_param import BetaWebSearchResultBlockParam as BetaWebSearchResultBlockParam",
        "from .beta_thinking_config_disabled_param import BetaThinkingConfigDisabledParam as BetaThinkingConfigDisabledParam",
        "from .beta_web_search_tool_20250305_param import BetaWebSearchTool20250305Param as BetaWebSearchTool20250305Param",
        "from .beta_citation_content_block_location import BetaCitationContentBlockLocation as BetaCitationContentBlockLocation",
        "from .beta_citation_search_result_location import BetaCitationSearchResultLocation as BetaCitationSearchResultLocation",
        "from .beta_tool_text_editor_20241022_param import BetaToolTextEditor20241022Param as BetaToolTextEditor20241022Param",
        "from .beta_tool_text_editor_20250124_param import BetaToolTextEditor20250124Param as BetaToolTextEditor20250124Param",
        "from .beta_tool_text_editor_20250429_param import BetaToolTextEditor20250429Param as BetaToolTextEditor20250429Param",
        "from .beta_tool_text_editor_20250728_param import BetaToolTextEditor20250728Param as BetaToolTextEditor20250728Param",
        "from .beta_code_execution_tool_result_block import BetaCodeExecutionToolResultBlock as BetaCodeExecutionToolResultBlock",
        "from .beta_code_execution_tool_result_error import BetaCodeExecutionToolResultError as BetaCodeExecutionToolResultError",
        "from .beta_tool_computer_use_20241022_param import BetaToolComputerUse20241022Param as BetaToolComputerUse20241022Param",
        "from .beta_tool_computer_use_20250124_param import BetaToolComputerUse20250124Param as BetaToolComputerUse20250124Param",
        "from .beta_code_execution_output_block_param import (",
        "from .beta_code_execution_result_block_param import (",
        "from .beta_web_search_tool_result_error_code import BetaWebSearchToolResultErrorCode as BetaWebSearchToolResultErrorCode",
        "from .beta_code_execution_tool_20250522_param import (",
        "from .beta_content_block_source_content_param import (",
        "from .beta_web_search_tool_result_block_param import (",
        "from .beta_request_mcp_tool_result_block_param import (",
        "from .beta_web_search_tool_request_error_param import (",
        "from .beta_citations_web_search_result_location import (",
        "from .beta_web_search_tool_result_block_content import (",
        "from .beta_citation_content_block_location_param import (",
        "from .beta_citation_search_result_location_param import (",
        "from .beta_code_execution_tool_result_error_code import (",
        "from .beta_code_execution_tool_result_block_param import (",
        "from .beta_code_execution_tool_result_error_param import (",
        "from .beta_request_mcp_server_url_definition_param import (",
        "from .beta_code_execution_tool_result_block_content import (",
        "from .beta_citation_web_search_result_location_param import (",
        "from .beta_request_mcp_server_tool_configuration_param import (",
        "from .beta_web_search_tool_result_block_param_content_param import (",
        "from .beta_code_execution_tool_result_block_param_content_param import ("
      ],
      "estimated_loc_savings": 37,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/types/messages/__init__.py",
      "current_size_lines": 13,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .message_batch import MessageBatch as MessageBatch",
        "from .batch_list_params import BatchListParams as BatchListParams",
        "from .batch_create_params import BatchCreateParams as BatchCreateParams",
        "from .message_batch_result import MessageBatchResult as MessageBatchResult",
        "from .deleted_message_batch import DeletedMessageBatch as DeletedMessageBatch",
        "from .message_batch_errored_result import MessageBatchErroredResult as MessageBatchErroredResult",
        "from .message_batch_expired_result import MessageBatchExpiredResult as MessageBatchExpiredResult",
        "from .message_batch_request_counts import MessageBatchRequestCounts as MessageBatchRequestCounts",
        "from .message_batch_canceled_result import MessageBatchCanceledResult as MessageBatchCanceledResult",
        "from .message_batch_succeeded_result import MessageBatchSucceededResult as MessageBatchSucceededResult",
        "from .message_batch_individual_response import MessageBatchIndividualResponse as MessageBatchIndividualResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/types/shared/__init__.py",
      "current_size_lines": 12,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .error_object import ErrorObject as ErrorObject",
        "from .billing_error import BillingError as BillingError",
        "from .error_response import ErrorResponse as ErrorResponse",
        "from .not_found_error import NotFoundError as NotFoundError",
        "from .api_error_object import APIErrorObject as APIErrorObject",
        "from .overloaded_error import OverloadedError as OverloadedError",
        "from .permission_error import PermissionError as PermissionError",
        "from .rate_limit_error import RateLimitError as RateLimitError",
        "from .authentication_error import AuthenticationError as AuthenticationError",
        "from .gateway_timeout_error import GatewayTimeoutError as GatewayTimeoutError",
        "from .invalid_request_error import InvalidRequestError as InvalidRequestError"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/types/beta/messages/__init__.py",
      "current_size_lines": 15,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .batch_list_params import BatchListParams as BatchListParams",
        "from .beta_message_batch import BetaMessageBatch as BetaMessageBatch",
        "from .batch_create_params import BatchCreateParams as BatchCreateParams",
        "from .beta_message_batch_result import BetaMessageBatchResult as BetaMessageBatchResult",
        "from .beta_deleted_message_batch import BetaDeletedMessageBatch as BetaDeletedMessageBatch",
        "from .beta_message_batch_errored_result import BetaMessageBatchErroredResult as BetaMessageBatchErroredResult",
        "from .beta_message_batch_expired_result import BetaMessageBatchExpiredResult as BetaMessageBatchExpiredResult",
        "from .beta_message_batch_request_counts import BetaMessageBatchRequestCounts as BetaMessageBatchRequestCounts",
        "from .beta_message_batch_canceled_result import BetaMessageBatchCanceledResult as BetaMessageBatchCanceledResult",
        "from .beta_message_batch_succeeded_result import BetaMessageBatchSucceededResult as BetaMessageBatchSucceededResult",
        "from .beta_message_batch_individual_response import ("
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/resources/beta/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .files import (",
        "from .models import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/resources/messages/__init__.py",
      "current_size_lines": 33,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .batches import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 25,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/resources/beta/messages/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .batches import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/lib/_extras/__init__.py",
      "current_size_lines": 1,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._google_auth import google_auth as google_auth"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/lib/bedrock/__init__.py",
      "current_size_lines": 1,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._client import AnthropicBedrock as AnthropicBedrock, AsyncAnthropicBedrock as AsyncAnthropicBedrock"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/lib/streaming/__init__.py",
      "current_size_lines": 26,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._types import (",
        "from ._messages import (",
        "from ._beta_types import (",
        "from ._beta_messages import ("
      ],
      "estimated_loc_savings": 17,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/anthropic/lib/vertex/__init__.py",
      "current_size_lines": 1,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._client import AnthropicVertex as AnthropicVertex, AsyncAnthropicVertex as AsyncAnthropicVertex"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/middleware/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/supervisors/__init__.py",
      "current_size_lines": 12,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [\"Multiprocess\", \"ChangeReload\"]"
      ],
      "estimated_loc_savings": 6,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/lifespan/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/loops/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/protocols/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/protocols/websockets/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/uvicorn/protocols/http/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/config/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = ['load_config', 'Config']"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/livereload/__init__.py",
      "current_size_lines": 317,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 312,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/utils/__init__.py",
      "current_size_lines": 310,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 305,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/contrib/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/commands/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/structure/__init__.py",
      "current_size_lines": 26,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 21,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/themes/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/contrib/search/__init__.py",
      "current_size_lines": 101,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 96,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/themes/readthedocs/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/mkdocs/themes/mkdocs/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/util/__init__.py",
      "current_size_lines": 29,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .editor import open_in_editor as open_in_editor",
        "from .exc import AutogenerateDiffsDetected as AutogenerateDiffsDetected",
        "from .exc import CommandError as CommandError",
        "from .langhelpers import _with_legacy_names as _with_legacy_names",
        "from .langhelpers import asbool as asbool",
        "from .langhelpers import dedupe_tuple as dedupe_tuple",
        "from .langhelpers import Dispatcher as Dispatcher",
        "from .langhelpers import EMPTY_DICT as EMPTY_DICT",
        "from .langhelpers import immutabledict as immutabledict",
        "from .langhelpers import memoized_property as memoized_property",
        "from .langhelpers import ModuleClsProxy as ModuleClsProxy",
        "from .langhelpers import not_none as not_none",
        "from .langhelpers import rev_id as rev_id",
        "from .langhelpers import to_list as to_list",
        "from .langhelpers import to_tuple as to_tuple",
        "from .langhelpers import unique_list as unique_list",
        "from .messaging import err as err",
        "from .messaging import format_as_comma as format_as_comma",
        "from .messaging import msg as msg",
        "from .messaging import obfuscate_url_pw as obfuscate_url_pw",
        "from .messaging import status as status",
        "from .messaging import warn as warn",
        "from .messaging import warn_deprecated as warn_deprecated",
        "from .messaging import write_outstream as write_outstream",
        "from .pyfiles import coerce_resource_to_filename as coerce_resource_to_filename",
        "from .pyfiles import load_python_file as load_python_file",
        "from .pyfiles import pyc_file_from_path as pyc_file_from_path",
        "from .pyfiles import template_to_file as template_to_file",
        "from .sqla_compat import sqla_2 as sqla_2"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/ddl/__init__.py",
      "current_size_lines": 6,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from . import mssql",
        "from . import mysql",
        "from . import oracle",
        "from . import postgresql",
        "from . import sqlite",
        "from .impl import DefaultImpl as DefaultImpl"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/runtime/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/operations/__init__.py",
      "current_size_lines": 13,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from . import toimpl",
        "from .base import AbstractOperations",
        "from .base import BatchOperations",
        "from .base import Operations",
        "from .ops import MigrateOperation",
        "from .ops import MigrationScript",
        "__all__ = ["
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/script/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import Script",
        "from .base import ScriptDirectory",
        "__all__ = [\"ScriptDirectory\", \"Script\"]"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/testing/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .assertions import assert_raises",
        "from .assertions import assert_raises_message",
        "from .assertions import emits_python_deprecation_warning",
        "from .assertions import eq_",
        "from .assertions import eq_ignore_whitespace",
        "from .assertions import expect_deprecated",
        "from .assertions import expect_raises",
        "from .assertions import expect_raises_message",
        "from .assertions import expect_sqlalchemy_deprecated",
        "from .assertions import expect_sqlalchemy_deprecated_20",
        "from .assertions import expect_warnings",
        "from .assertions import is_",
        "from .assertions import is_false",
        "from .assertions import is_not_",
        "from .assertions import is_true",
        "from .assertions import ne_",
        "from .fixtures import TestBase",
        "from .util import resolve_lambda"
      ],
      "estimated_loc_savings": 8,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/autogenerate/__init__.py",
      "current_size_lines": 10,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .api import _render_migration_diffs as _render_migration_diffs",
        "from .api import compare_metadata as compare_metadata",
        "from .api import produce_migrations as produce_migrations",
        "from .api import render_python_code as render_python_code",
        "from .api import RevisionContext as RevisionContext",
        "from .compare import _produce_net_changes as _produce_net_changes",
        "from .compare import comparators as comparators",
        "from .render import render_op_text as render_op_text",
        "from .render import renderers as renderers",
        "from .rewriter import Rewriter as Rewriter"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/testing/plugin/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/alembic/testing/suite/__init__.py",
      "current_size_lines": 7,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .test_autogen_comments import *  # noqa",
        "from .test_autogen_computed import *  # noqa",
        "from .test_autogen_diffs import *  # noqa",
        "from .test_autogen_fks import *  # noqa",
        "from .test_autogen_identity import *  # noqa",
        "from .test_environment import *  # noqa",
        "from .test_op import *  # noqa"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/selective_build/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/static_runtime/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/operator_versions/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/dest/__init__.py",
      "current_size_lines": 19,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 14,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/api/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/aoti/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/packaged/autograd/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torchgen/api/types/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pydantic_settings/sources/__init__.py",
      "current_size_lines": 66,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import (",
        "from .providers.aws import AWSSecretsManagerSettingsSource",
        "from .providers.azure import AzureKeyVaultSettingsSource",
        "from .providers.cli import (",
        "from .providers.dotenv import DotEnvSettingsSource, read_env_file",
        "from .providers.env import EnvSettingsSource",
        "from .providers.gcp import GoogleSecretManagerSettingsSource",
        "from .providers.json import JsonConfigSettingsSource",
        "from .providers.pyproject import PyprojectTomlConfigSettingsSource",
        "from .providers.secrets import SecretsSettingsSource",
        "from .providers.toml import TomlConfigSettingsSource",
        "from .providers.yaml import YamlConfigSettingsSource",
        "from .types import DEFAULT_PATH, ENV_FILE_SENTINEL, DotenvType, ForceDecode, NoDecode, PathType, PydanticModel",
        "__all__ = ["
      ],
      "estimated_loc_savings": 47,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pydantic_settings/sources/providers/__init__.py",
      "current_size_lines": 39,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .aws import AWSSecretsManagerSettingsSource",
        "from .azure import AzureKeyVaultSettingsSource",
        "from .cli import (",
        "from .dotenv import DotEnvSettingsSource",
        "from .env import EnvSettingsSource",
        "from .gcp import GoogleSecretManagerSettingsSource",
        "from .json import JsonConfigSettingsSource",
        "from .pyproject import PyprojectTomlConfigSettingsSource",
        "from .secrets import SecretsSettingsSource",
        "from .toml import TomlConfigSettingsSource",
        "from .yaml import YamlConfigSettingsSource",
        "__all__ = ["
      ],
      "estimated_loc_savings": 22,
      "requires_standardization": true
    }
  ],
  "estimated_loc_savings": 1047,
  "file_count": 50
}