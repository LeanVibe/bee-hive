name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '20'

jobs:
  # Code security analysis
  code-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety semgrep
      
      - name: Run Bandit security analysis
        run: |
          bandit -r app -f sarif -o bandit-results.sarif
          bandit -r app -f json -o bandit-results.json
      
      - name: Upload Bandit scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: bandit-results.sarif
      
      - name: Run Safety dependency check
        run: |
          safety check --json --output safety-results.json
      
      - name: Run Semgrep security analysis
        run: |
          semgrep --config=auto --sarif --output=semgrep-results.sarif app/
      
      - name: Upload Semgrep scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep-results.sarif
      
      - name: Upload security artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-results.json
            safety-results.json
            semgrep-results.sarif
          retention-days: 30

  # Frontend security analysis
  frontend-security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-pwa
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit-results.json
        continue-on-error: true
      
      - name: Check for vulnerable packages
        run: |
          npx audit-ci --moderate
      
      - name: Upload frontend security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-security-reports
          path: mobile-pwa/npm-audit-results.json
          retention-days: 30

  # Container security scanning
  container-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker image for scanning
        run: |
          docker build -t leanvibe-agent-hive:security-scan .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'leanvibe-agent-hive:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Trivy config scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
      
      - name: Upload Trivy config scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-config-results.sarif'

  # SAST with CodeQL
  codeql:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    strategy:
      matrix:
        language: [ 'python', 'javascript' ]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Secrets scanning with TruffleHog
  secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # Security summary and reporting
  security-summary:
    needs: [code-security, frontend-security, container-security, codeql, secrets-scan]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all security artifacts
        uses: actions/download-artifact@v4
        with:
          path: security-artifacts
      
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "Generated on: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Scan Results" >> security-summary.md
          echo "- Code Security: ${{ needs.code-security.result }}" >> security-summary.md
          echo "- Frontend Security: ${{ needs.frontend-security.result }}" >> security-summary.md
          echo "- Container Security: ${{ needs.container-security.result }}" >> security-summary.md
          echo "- CodeQL SAST: ${{ needs.codeql.result }}" >> security-summary.md
          echo "- Secrets Scan: ${{ needs.secrets-scan.result }}" >> security-summary.md
      
      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90