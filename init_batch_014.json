{
  "batch_id": "init_batch_014",
  "files": [
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/gitdb/db/__init__.py",
      "current_size_lines": 10,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 5,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/git/objects/__init__.py",
      "current_size_lines": 22,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [",
        "from .base import IndexObject, Object",
        "from .blob import Blob",
        "from .commit import Commit",
        "from .submodule import RootModule, RootUpdateProgress, Submodule, UpdateProgress",
        "from .tag import TagObject",
        "from .tree import Tree, TreeModifier"
      ],
      "estimated_loc_savings": 10,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/git/refs/__init__.py",
      "current_size_lines": 19,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [",
        "from .head import HEAD, Head",
        "from .log import RefLog, RefLogEntry",
        "from .reference import Reference",
        "from .remote import RemoteReference",
        "from .symbolic import SymbolicReference",
        "from .tag import Tag, TagReference"
      ],
      "estimated_loc_savings": 7,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/git/index/__init__.py",
      "current_size_lines": 13,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [",
        "from .base import CheckoutError, IndexFile",
        "from .typ import BaseIndexEntry, BlobFilter, IndexEntry, StageType"
      ],
      "estimated_loc_savings": 5,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/git/repo/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [\"Repo\"]",
        "from .base import Repo"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/git/objects/submodule/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [\"Submodule\", \"UpdateProgress\", \"RootModule\", \"RootUpdateProgress\"]",
        "from .base import Submodule, UpdateProgress",
        "from .root import RootModule, RootUpdateProgress"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/dateutil/zoneinfo/__init__.py",
      "current_size_lines": 128,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [\"get_zonefile_instance\", \"gettz\", \"gettz_db_metadata\"]"
      ],
      "estimated_loc_savings": 122,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/dateutil/parser/__init__.py",
      "current_size_lines": 42,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from ._parser import parse, parser, parserinfo, ParserError",
        "from ._parser import DEFAULTPARSER, DEFAULTTZPARSER",
        "from ._parser import UnknownTimezoneWarning",
        "from ._parser import __doc__",
        "from .isoparser import isoparser, isoparse",
        "__all__ = ['parse', 'parser', 'parserinfo',",
        "from ._parser import _timelex, _resultbase",
        "from ._parser import _tzparser, _parsetz"
      ],
      "estimated_loc_savings": 29,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/dateutil/tz/__init__.py",
      "current_size_lines": 9,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .tz import *",
        "from .tz import __doc__",
        "__all__ = [\"tzutc\", \"tzoffset\", \"tzlocal\", \"tzfile\", \"tzrange\","
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/_utils/__init__.py",
      "current_size_lines": 60,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._logs import SensitiveHeadersFilter as SensitiveHeadersFilter",
        "from ._sync import asyncify as asyncify",
        "from ._proxy import LazyProxy as LazyProxy",
        "from ._utils import (",
        "from ._typing import (",
        "from ._streams import consume_sync_iterator as consume_sync_iterator, consume_async_iterator as consume_async_iterator",
        "from ._transform import (",
        "from ._reflection import ("
      ],
      "estimated_loc_savings": 47,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/__init__.py",
      "current_size_lines": 102,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .batch import Batch as Batch",
        "from .image import Image as Image",
        "from .model import Model as Model",
        "from .shared import (",
        "from .upload import Upload as Upload",
        "from .embedding import Embedding as Embedding",
        "from .chat_model import ChatModel as ChatModel",
        "from .completion import Completion as Completion",
        "from .moderation import Moderation as Moderation",
        "from .audio_model import AudioModel as AudioModel",
        "from .batch_error import BatchError as BatchError",
        "from .file_object import FileObject as FileObject",
        "from .image_model import ImageModel as ImageModel",
        "from .file_content import FileContent as FileContent",
        "from .file_deleted import FileDeleted as FileDeleted",
        "from .file_purpose import FilePurpose as FilePurpose",
        "from .vector_store import VectorStore as VectorStore",
        "from .model_deleted import ModelDeleted as ModelDeleted",
        "from .embedding_model import EmbeddingModel as EmbeddingModel",
        "from .images_response import ImagesResponse as ImagesResponse",
        "from .completion_usage import CompletionUsage as CompletionUsage",
        "from .eval_list_params import EvalListParams as EvalListParams",
        "from .file_list_params import FileListParams as FileListParams",
        "from .moderation_model import ModerationModel as ModerationModel",
        "from .batch_list_params import BatchListParams as BatchListParams",
        "from .completion_choice import CompletionChoice as CompletionChoice",
        "from .image_edit_params import ImageEditParams as ImageEditParams",
        "from .eval_create_params import EvalCreateParams as EvalCreateParams",
        "from .eval_list_response import EvalListResponse as EvalListResponse",
        "from .eval_update_params import EvalUpdateParams as EvalUpdateParams",
        "from .file_create_params import FileCreateParams as FileCreateParams",
        "from .batch_create_params import BatchCreateParams as BatchCreateParams",
        "from .batch_request_counts import BatchRequestCounts as BatchRequestCounts",
        "from .eval_create_response import EvalCreateResponse as EvalCreateResponse",
        "from .eval_delete_response import EvalDeleteResponse as EvalDeleteResponse",
        "from .eval_update_response import EvalUpdateResponse as EvalUpdateResponse",
        "from .upload_create_params import UploadCreateParams as UploadCreateParams",
        "from .vector_store_deleted import VectorStoreDeleted as VectorStoreDeleted",
        "from .audio_response_format import AudioResponseFormat as AudioResponseFormat",
        "from .container_list_params import ContainerListParams as ContainerListParams",
        "from .image_generate_params import ImageGenerateParams as ImageGenerateParams",
        "from .eval_retrieve_response import EvalRetrieveResponse as EvalRetrieveResponse",
        "from .file_chunking_strategy import FileChunkingStrategy as FileChunkingStrategy",
        "from .image_gen_stream_event import ImageGenStreamEvent as ImageGenStreamEvent",
        "from .upload_complete_params import UploadCompleteParams as UploadCompleteParams",
        "from .container_create_params import ContainerCreateParams as ContainerCreateParams",
        "from .container_list_response import ContainerListResponse as ContainerListResponse",
        "from .embedding_create_params import EmbeddingCreateParams as EmbeddingCreateParams",
        "from .image_edit_stream_event import ImageEditStreamEvent as ImageEditStreamEvent",
        "from .completion_create_params import CompletionCreateParams as CompletionCreateParams",
        "from .moderation_create_params import ModerationCreateParams as ModerationCreateParams",
        "from .vector_store_list_params import VectorStoreListParams as VectorStoreListParams",
        "from .container_create_response import ContainerCreateResponse as ContainerCreateResponse",
        "from .create_embedding_response import CreateEmbeddingResponse as CreateEmbeddingResponse",
        "from .image_gen_completed_event import ImageGenCompletedEvent as ImageGenCompletedEvent",
        "from .image_edit_completed_event import ImageEditCompletedEvent as ImageEditCompletedEvent",
        "from .moderation_create_response import ModerationCreateResponse as ModerationCreateResponse",
        "from .vector_store_create_params import VectorStoreCreateParams as VectorStoreCreateParams",
        "from .vector_store_search_params import VectorStoreSearchParams as VectorStoreSearchParams",
        "from .vector_store_update_params import VectorStoreUpdateParams as VectorStoreUpdateParams",
        "from .container_retrieve_response import ContainerRetrieveResponse as ContainerRetrieveResponse",
        "from .moderation_text_input_param import ModerationTextInputParam as ModerationTextInputParam",
        "from .file_chunking_strategy_param import FileChunkingStrategyParam as FileChunkingStrategyParam",
        "from .vector_store_search_response import VectorStoreSearchResponse as VectorStoreSearchResponse",
        "from .websocket_connection_options import WebsocketConnectionOptions as WebsocketConnectionOptions",
        "from .image_create_variation_params import ImageCreateVariationParams as ImageCreateVariationParams",
        "from .image_gen_partial_image_event import ImageGenPartialImageEvent as ImageGenPartialImageEvent",
        "from .static_file_chunking_strategy import StaticFileChunkingStrategy as StaticFileChunkingStrategy",
        "from .eval_custom_data_source_config import EvalCustomDataSourceConfig as EvalCustomDataSourceConfig",
        "from .image_edit_partial_image_event import ImageEditPartialImageEvent as ImageEditPartialImageEvent",
        "from .moderation_image_url_input_param import ModerationImageURLInputParam as ModerationImageURLInputParam",
        "from .auto_file_chunking_strategy_param import AutoFileChunkingStrategyParam as AutoFileChunkingStrategyParam",
        "from .moderation_multi_modal_input_param import ModerationMultiModalInputParam as ModerationMultiModalInputParam",
        "from .other_file_chunking_strategy_object import OtherFileChunkingStrategyObject as OtherFileChunkingStrategyObject",
        "from .static_file_chunking_strategy_param import StaticFileChunkingStrategyParam as StaticFileChunkingStrategyParam",
        "from .static_file_chunking_strategy_object import StaticFileChunkingStrategyObject as StaticFileChunkingStrategyObject",
        "from .eval_stored_completions_data_source_config import (",
        "from .static_file_chunking_strategy_object_param import ("
      ],
      "estimated_loc_savings": 19,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/_extras/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .numpy_proxy import numpy as numpy, has_numpy as has_numpy",
        "from .pandas_proxy import pandas as pandas",
        "from .sounddevice_proxy import sounddevice as sounddevice"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/__init__.py",
      "current_size_lines": 213,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .chat import (",
        "from .audio import (",
        "from .evals import (",
        "from .files import (",
        "from .images import (",
        "from .models import (",
        "from .batches import (",
        "from .uploads import (",
        "from .containers import (",
        "from .embeddings import (",
        "from .completions import (",
        "from .fine_tuning import (",
        "from .moderations import (",
        "from .vector_stores import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 192,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/cli/__init__.py",
      "current_size_lines": 1,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._cli import main as main"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/lib/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._tools import pydantic_function_tool as pydantic_function_tool",
        "from ._parsing import ResponseFormatT as ResponseFormatT"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/helpers/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .microphone import Microphone",
        "from .local_audio_player import LocalAudioPlayer",
        "__all__ = [\"Microphone\", \"LocalAudioPlayer\"]"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/beta/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .thread import Thread as Thread",
        "from .assistant import Assistant as Assistant",
        "from .function_tool import FunctionTool as FunctionTool",
        "from .assistant_tool import AssistantTool as AssistantTool",
        "from .thread_deleted import ThreadDeleted as ThreadDeleted",
        "from .file_search_tool import FileSearchTool as FileSearchTool",
        "from .assistant_deleted import AssistantDeleted as AssistantDeleted",
        "from .function_tool_param import FunctionToolParam as FunctionToolParam",
        "from .assistant_tool_param import AssistantToolParam as AssistantToolParam",
        "from .thread_create_params import ThreadCreateParams as ThreadCreateParams",
        "from .thread_update_params import ThreadUpdateParams as ThreadUpdateParams",
        "from .assistant_list_params import AssistantListParams as AssistantListParams",
        "from .assistant_tool_choice import AssistantToolChoice as AssistantToolChoice",
        "from .code_interpreter_tool import CodeInterpreterTool as CodeInterpreterTool",
        "from .assistant_stream_event import AssistantStreamEvent as AssistantStreamEvent",
        "from .file_search_tool_param import FileSearchToolParam as FileSearchToolParam",
        "from .assistant_create_params import AssistantCreateParams as AssistantCreateParams",
        "from .assistant_update_params import AssistantUpdateParams as AssistantUpdateParams",
        "from .assistant_tool_choice_param import AssistantToolChoiceParam as AssistantToolChoiceParam",
        "from .code_interpreter_tool_param import CodeInterpreterToolParam as CodeInterpreterToolParam",
        "from .assistant_tool_choice_option import AssistantToolChoiceOption as AssistantToolChoiceOption",
        "from .thread_create_and_run_params import ThreadCreateAndRunParams as ThreadCreateAndRunParams",
        "from .assistant_tool_choice_function import AssistantToolChoiceFunction as AssistantToolChoiceFunction",
        "from .assistant_response_format_option import AssistantResponseFormatOption as AssistantResponseFormatOption",
        "from .assistant_tool_choice_option_param import AssistantToolChoiceOptionParam as AssistantToolChoiceOptionParam",
        "from .assistant_tool_choice_function_param import AssistantToolChoiceFunctionParam as AssistantToolChoiceFunctionParam",
        "from .assistant_response_format_option_param import ("
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/vector_stores/__init__.py",
      "current_size_lines": 11,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .file_list_params import FileListParams as FileListParams",
        "from .vector_store_file import VectorStoreFile as VectorStoreFile",
        "from .file_create_params import FileCreateParams as FileCreateParams",
        "from .file_update_params import FileUpdateParams as FileUpdateParams",
        "from .file_content_response import FileContentResponse as FileContentResponse",
        "from .vector_store_file_batch import VectorStoreFileBatch as VectorStoreFileBatch",
        "from .file_batch_create_params import FileBatchCreateParams as FileBatchCreateParams",
        "from .vector_store_file_deleted import VectorStoreFileDeleted as VectorStoreFileDeleted",
        "from .file_batch_list_files_params import FileBatchListFilesParams as FileBatchListFilesParams"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/evals/__init__.py",
      "current_size_lines": 20,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .eval_api_error import EvalAPIError as EvalAPIError",
        "from .run_list_params import RunListParams as RunListParams",
        "from .run_create_params import RunCreateParams as RunCreateParams",
        "from .run_list_response import RunListResponse as RunListResponse",
        "from .run_cancel_response import RunCancelResponse as RunCancelResponse",
        "from .run_create_response import RunCreateResponse as RunCreateResponse",
        "from .run_delete_response import RunDeleteResponse as RunDeleteResponse",
        "from .run_retrieve_response import RunRetrieveResponse as RunRetrieveResponse",
        "from .create_eval_jsonl_run_data_source import CreateEvalJSONLRunDataSource as CreateEvalJSONLRunDataSource",
        "from .create_eval_completions_run_data_source import (",
        "from .create_eval_jsonl_run_data_source_param import (",
        "from .create_eval_completions_run_data_source_param import ("
      ],
      "estimated_loc_savings": 3,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/fine_tuning/__init__.py",
      "current_size_lines": 24,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .dpo_method import DpoMethod as DpoMethod",
        "from .fine_tuning_job import FineTuningJob as FineTuningJob",
        "from .job_list_params import JobListParams as JobListParams",
        "from .dpo_method_param import DpoMethodParam as DpoMethodParam",
        "from .job_create_params import JobCreateParams as JobCreateParams",
        "from .supervised_method import SupervisedMethod as SupervisedMethod",
        "from .dpo_hyperparameters import DpoHyperparameters as DpoHyperparameters",
        "from .reinforcement_method import ReinforcementMethod as ReinforcementMethod",
        "from .fine_tuning_job_event import FineTuningJobEvent as FineTuningJobEvent",
        "from .job_list_events_params import JobListEventsParams as JobListEventsParams",
        "from .supervised_method_param import SupervisedMethodParam as SupervisedMethodParam",
        "from .dpo_hyperparameters_param import DpoHyperparametersParam as DpoHyperparametersParam",
        "from .reinforcement_method_param import ReinforcementMethodParam as ReinforcementMethodParam",
        "from .supervised_hyperparameters import SupervisedHyperparameters as SupervisedHyperparameters",
        "from .fine_tuning_job_integration import FineTuningJobIntegration as FineTuningJobIntegration",
        "from .reinforcement_hyperparameters import ReinforcementHyperparameters as ReinforcementHyperparameters",
        "from .supervised_hyperparameters_param import SupervisedHyperparametersParam as SupervisedHyperparametersParam",
        "from .fine_tuning_job_wandb_integration import FineTuningJobWandbIntegration as FineTuningJobWandbIntegration",
        "from .reinforcement_hyperparameters_param import ReinforcementHyperparametersParam as ReinforcementHyperparametersParam",
        "from .fine_tuning_job_wandb_integration_object import ("
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/chat/__init__.py",
      "current_size_lines": 100,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .chat_completion import ChatCompletion as ChatCompletion",
        "from .chat_completion_role import ChatCompletionRole as ChatCompletionRole",
        "from .chat_completion_audio import ChatCompletionAudio as ChatCompletionAudio",
        "from .chat_completion_chunk import ChatCompletionChunk as ChatCompletionChunk",
        "from .completion_list_params import CompletionListParams as CompletionListParams",
        "from .parsed_chat_completion import (",
        "from .chat_completion_deleted import ChatCompletionDeleted as ChatCompletionDeleted",
        "from .chat_completion_message import ChatCompletionMessage as ChatCompletionMessage",
        "from .chat_completion_modality import ChatCompletionModality as ChatCompletionModality",
        "from .completion_create_params import CompletionCreateParams as CompletionCreateParams",
        "from .completion_update_params import CompletionUpdateParams as CompletionUpdateParams",
        "from .parsed_function_tool_call import (",
        "from .chat_completion_tool_param import ChatCompletionToolParam as ChatCompletionToolParam",
        "from .chat_completion_audio_param import ChatCompletionAudioParam as ChatCompletionAudioParam",
        "from .chat_completion_function_tool import ChatCompletionFunctionTool as ChatCompletionFunctionTool",
        "from .chat_completion_message_param import ChatCompletionMessageParam as ChatCompletionMessageParam",
        "from .chat_completion_store_message import ChatCompletionStoreMessage as ChatCompletionStoreMessage",
        "from .chat_completion_token_logprob import ChatCompletionTokenLogprob as ChatCompletionTokenLogprob",
        "from .chat_completion_reasoning_effort import ChatCompletionReasoningEffort as ChatCompletionReasoningEffort",
        "from .chat_completion_tool_union_param import ChatCompletionToolUnionParam as ChatCompletionToolUnionParam",
        "from .chat_completion_content_part_text import ChatCompletionContentPartText as ChatCompletionContentPartText",
        "from .chat_completion_custom_tool_param import ChatCompletionCustomToolParam as ChatCompletionCustomToolParam",
        "from .chat_completion_message_tool_call import (",
        "from .chat_completion_content_part_image import ChatCompletionContentPartImage as ChatCompletionContentPartImage",
        "from .chat_completion_content_part_param import ChatCompletionContentPartParam as ChatCompletionContentPartParam",
        "from .chat_completion_tool_message_param import ChatCompletionToolMessageParam as ChatCompletionToolMessageParam",
        "from .chat_completion_user_message_param import ChatCompletionUserMessageParam as ChatCompletionUserMessageParam",
        "from .chat_completion_allowed_tools_param import ChatCompletionAllowedToolsParam as ChatCompletionAllowedToolsParam",
        "from .chat_completion_function_tool_param import ChatCompletionFunctionToolParam as ChatCompletionFunctionToolParam",
        "from .chat_completion_stream_options_param import ChatCompletionStreamOptionsParam as ChatCompletionStreamOptionsParam",
        "from .chat_completion_system_message_param import ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam",
        "from .chat_completion_function_message_param import (",
        "from .chat_completion_assistant_message_param import (",
        "from .chat_completion_content_part_text_param import (",
        "from .chat_completion_developer_message_param import (",
        "from .chat_completion_message_tool_call_param import (",
        "from .chat_completion_named_tool_choice_param import (",
        "from .chat_completion_content_part_image_param import (",
        "from .chat_completion_message_custom_tool_call import (",
        "from .chat_completion_prediction_content_param import (",
        "from .chat_completion_tool_choice_option_param import (",
        "from .chat_completion_allowed_tool_choice_param import (",
        "from .chat_completion_content_part_refusal_param import (",
        "from .chat_completion_function_call_option_param import (",
        "from .chat_completion_message_function_tool_call import (",
        "from .chat_completion_message_tool_call_union_param import (",
        "from .chat_completion_content_part_input_audio_param import (",
        "from .chat_completion_message_custom_tool_call_param import (",
        "from .chat_completion_named_tool_choice_custom_param import (",
        "from .chat_completion_message_function_tool_call_param import ("
      ],
      "estimated_loc_savings": 45,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/responses/__init__.py",
      "current_size_lines": 225,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .tool import Tool as Tool",
        "from .response import Response as Response",
        "from .tool_param import ToolParam as ToolParam",
        "from .custom_tool import CustomTool as CustomTool",
        "from .computer_tool import ComputerTool as ComputerTool",
        "from .function_tool import FunctionTool as FunctionTool",
        "from .response_item import ResponseItem as ResponseItem",
        "from .response_error import ResponseError as ResponseError",
        "from .response_usage import ResponseUsage as ResponseUsage",
        "from .parsed_response import (",
        "from .response_prompt import ResponsePrompt as ResponsePrompt",
        "from .response_status import ResponseStatus as ResponseStatus",
        "from .tool_choice_mcp import ToolChoiceMcp as ToolChoiceMcp",
        "from .web_search_tool import WebSearchTool as WebSearchTool",
        "from .file_search_tool import FileSearchTool as FileSearchTool",
        "from .custom_tool_param import CustomToolParam as CustomToolParam",
        "from .tool_choice_types import ToolChoiceTypes as ToolChoiceTypes",
        "from .easy_input_message import EasyInputMessage as EasyInputMessage",
        "from .response_item_list import ResponseItemList as ResponseItemList",
        "from .tool_choice_custom import ToolChoiceCustom as ToolChoiceCustom",
        "from .computer_tool_param import ComputerToolParam as ComputerToolParam",
        "from .function_tool_param import FunctionToolParam as FunctionToolParam",
        "from .response_includable import ResponseIncludable as ResponseIncludable",
        "from .response_input_file import ResponseInputFile as ResponseInputFile",
        "from .response_input_item import ResponseInputItem as ResponseInputItem",
        "from .response_input_text import ResponseInputText as ResponseInputText",
        "from .tool_choice_allowed import ToolChoiceAllowed as ToolChoiceAllowed",
        "from .tool_choice_options import ToolChoiceOptions as ToolChoiceOptions",
        "from .response_error_event import ResponseErrorEvent as ResponseErrorEvent",
        "from .response_input_image import ResponseInputImage as ResponseInputImage",
        "from .response_input_param import ResponseInputParam as ResponseInputParam",
        "from .response_output_item import ResponseOutputItem as ResponseOutputItem",
        "from .response_output_text import ResponseOutputText as ResponseOutputText",
        "from .response_text_config import ResponseTextConfig as ResponseTextConfig",
        "from .tool_choice_function import ToolChoiceFunction as ToolChoiceFunction",
        "from .response_failed_event import ResponseFailedEvent as ResponseFailedEvent",
        "from .response_prompt_param import ResponsePromptParam as ResponsePromptParam",
        "from .response_queued_event import ResponseQueuedEvent as ResponseQueuedEvent",
        "from .response_stream_event import ResponseStreamEvent as ResponseStreamEvent",
        "from .tool_choice_mcp_param import ToolChoiceMcpParam as ToolChoiceMcpParam",
        "from .web_search_tool_param import WebSearchToolParam as WebSearchToolParam",
        "from .file_search_tool_param import FileSearchToolParam as FileSearchToolParam",
        "from .input_item_list_params import InputItemListParams as InputItemListParams",
        "from .response_create_params import ResponseCreateParams as ResponseCreateParams",
        "from .response_created_event import ResponseCreatedEvent as ResponseCreatedEvent",
        "from .response_input_content import ResponseInputContent as ResponseInputContent",
        "from .response_output_message import ResponseOutputMessage as ResponseOutputMessage",
        "from .response_output_refusal import ResponseOutputRefusal as ResponseOutputRefusal",
        "from .response_reasoning_item import ResponseReasoningItem as ResponseReasoningItem",
        "from .tool_choice_types_param import ToolChoiceTypesParam as ToolChoiceTypesParam",
        "from .easy_input_message_param import EasyInputMessageParam as EasyInputMessageParam",
        "from .response_completed_event import ResponseCompletedEvent as ResponseCompletedEvent",
        "from .response_retrieve_params import ResponseRetrieveParams as ResponseRetrieveParams",
        "from .response_text_done_event import ResponseTextDoneEvent as ResponseTextDoneEvent",
        "from .tool_choice_custom_param import ToolChoiceCustomParam as ToolChoiceCustomParam",
        "from .response_audio_done_event import ResponseAudioDoneEvent as ResponseAudioDoneEvent",
        "from .response_custom_tool_call import ResponseCustomToolCall as ResponseCustomToolCall",
        "from .response_incomplete_event import ResponseIncompleteEvent as ResponseIncompleteEvent",
        "from .response_input_file_param import ResponseInputFileParam as ResponseInputFileParam",
        "from .response_input_item_param import ResponseInputItemParam as ResponseInputItemParam",
        "from .response_input_text_param import ResponseInputTextParam as ResponseInputTextParam",
        "from .response_text_delta_event import ResponseTextDeltaEvent as ResponseTextDeltaEvent",
        "from .tool_choice_allowed_param import ToolChoiceAllowedParam as ToolChoiceAllowedParam",
        "from .response_audio_delta_event import ResponseAudioDeltaEvent as ResponseAudioDeltaEvent",
        "from .response_in_progress_event import ResponseInProgressEvent as ResponseInProgressEvent",
        "from .response_input_image_param import ResponseInputImageParam as ResponseInputImageParam",
        "from .response_output_text_param import ResponseOutputTextParam as ResponseOutputTextParam",
        "from .response_text_config_param import ResponseTextConfigParam as ResponseTextConfigParam",
        "from .tool_choice_function_param import ToolChoiceFunctionParam as ToolChoiceFunctionParam",
        "from .response_computer_tool_call import ResponseComputerToolCall as ResponseComputerToolCall",
        "from .response_format_text_config import ResponseFormatTextConfig as ResponseFormatTextConfig",
        "from .response_function_tool_call import ResponseFunctionToolCall as ResponseFunctionToolCall",
        "from .response_input_message_item import ResponseInputMessageItem as ResponseInputMessageItem",
        "from .response_refusal_done_event import ResponseRefusalDoneEvent as ResponseRefusalDoneEvent",
        "from .response_function_web_search import ResponseFunctionWebSearch as ResponseFunctionWebSearch",
        "from .response_input_content_param import ResponseInputContentParam as ResponseInputContentParam",
        "from .response_refusal_delta_event import ResponseRefusalDeltaEvent as ResponseRefusalDeltaEvent",
        "from .response_output_message_param import ResponseOutputMessageParam as ResponseOutputMessageParam",
        "from .response_output_refusal_param import ResponseOutputRefusalParam as ResponseOutputRefusalParam",
        "from .response_reasoning_item_param import ResponseReasoningItemParam as ResponseReasoningItemParam",
        "from .response_file_search_tool_call import ResponseFileSearchToolCall as ResponseFileSearchToolCall",
        "from .response_mcp_call_failed_event import ResponseMcpCallFailedEvent as ResponseMcpCallFailedEvent",
        "from .response_custom_tool_call_param import ResponseCustomToolCallParam as ResponseCustomToolCallParam",
        "from .response_output_item_done_event import ResponseOutputItemDoneEvent as ResponseOutputItemDoneEvent",
        "from .response_content_part_done_event import ResponseContentPartDoneEvent as ResponseContentPartDoneEvent",
        "from .response_custom_tool_call_output import ResponseCustomToolCallOutput as ResponseCustomToolCallOutput",
        "from .response_function_tool_call_item import ResponseFunctionToolCallItem as ResponseFunctionToolCallItem",
        "from .response_output_item_added_event import ResponseOutputItemAddedEvent as ResponseOutputItemAddedEvent",
        "from .response_computer_tool_call_param import ResponseComputerToolCallParam as ResponseComputerToolCallParam",
        "from .response_content_part_added_event import ResponseContentPartAddedEvent as ResponseContentPartAddedEvent",
        "from .response_format_text_config_param import ResponseFormatTextConfigParam as ResponseFormatTextConfigParam",
        "from .response_function_tool_call_param import ResponseFunctionToolCallParam as ResponseFunctionToolCallParam",
        "from .response_mcp_call_completed_event import ResponseMcpCallCompletedEvent as ResponseMcpCallCompletedEvent",
        "from .response_function_web_search_param import ResponseFunctionWebSearchParam as ResponseFunctionWebSearchParam",
        "from .response_reasoning_text_done_event import ResponseReasoningTextDoneEvent as ResponseReasoningTextDoneEvent",
        "from .response_code_interpreter_tool_call import ResponseCodeInterpreterToolCall as ResponseCodeInterpreterToolCall",
        "from .response_input_message_content_list import ResponseInputMessageContentList as ResponseInputMessageContentList",
        "from .response_mcp_call_in_progress_event import ResponseMcpCallInProgressEvent as ResponseMcpCallInProgressEvent",
        "from .response_reasoning_text_delta_event import ResponseReasoningTextDeltaEvent as ResponseReasoningTextDeltaEvent",
        "from .response_audio_transcript_done_event import ResponseAudioTranscriptDoneEvent as ResponseAudioTranscriptDoneEvent",
        "from .response_file_search_tool_call_param import ResponseFileSearchToolCallParam as ResponseFileSearchToolCallParam",
        "from .response_mcp_list_tools_failed_event import ResponseMcpListToolsFailedEvent as ResponseMcpListToolsFailedEvent",
        "from .response_audio_transcript_delta_event import (",
        "from .response_custom_tool_call_output_param import (",
        "from .response_mcp_call_arguments_done_event import (",
        "from .response_computer_tool_call_output_item import (",
        "from .response_format_text_json_schema_config import (",
        "from .response_function_tool_call_output_item import (",
        "from .response_image_gen_call_completed_event import (",
        "from .response_mcp_call_arguments_delta_event import (",
        "from .response_mcp_list_tools_completed_event import (",
        "from .response_image_gen_call_generating_event import (",
        "from .response_web_search_call_completed_event import (",
        "from .response_web_search_call_searching_event import (",
        "from .response_code_interpreter_tool_call_param import (",
        "from .response_file_search_call_completed_event import (",
        "from .response_file_search_call_searching_event import (",
        "from .response_image_gen_call_in_progress_event import (",
        "from .response_input_message_content_list_param import (",
        "from .response_mcp_list_tools_in_progress_event import (",
        "from .response_custom_tool_call_input_done_event import (",
        "from .response_reasoning_summary_part_done_event import (",
        "from .response_reasoning_summary_text_done_event import (",
        "from .response_web_search_call_in_progress_event import (",
        "from .response_custom_tool_call_input_delta_event import (",
        "from .response_file_search_call_in_progress_event import (",
        "from .response_function_call_arguments_done_event import (",
        "from .response_image_gen_call_partial_image_event import (",
        "from .response_output_text_annotation_added_event import (",
        "from .response_reasoning_summary_part_added_event import (",
        "from .response_reasoning_summary_text_delta_event import (",
        "from .response_function_call_arguments_delta_event import (",
        "from .response_computer_tool_call_output_screenshot import (",
        "from .response_format_text_json_schema_config_param import (",
        "from .response_code_interpreter_call_code_done_event import (",
        "from .response_code_interpreter_call_completed_event import (",
        "from .response_code_interpreter_call_code_delta_event import (",
        "from .response_code_interpreter_call_in_progress_event import (",
        "from .response_code_interpreter_call_interpreting_event import (",
        "from .response_computer_tool_call_output_screenshot_param import ("
      ],
      "estimated_loc_savings": 80,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/uploads/__init__.py",
      "current_size_lines": 4,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .upload_part import UploadPart as UploadPart",
        "from .part_create_params import PartCreateParams as PartCreateParams"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/shared/__init__.py",
      "current_size_lines": 18,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .metadata import Metadata as Metadata",
        "from .reasoning import Reasoning as Reasoning",
        "from .all_models import AllModels as AllModels",
        "from .chat_model import ChatModel as ChatModel",
        "from .error_object import ErrorObject as ErrorObject",
        "from .compound_filter import CompoundFilter as CompoundFilter",
        "from .responses_model import ResponsesModel as ResponsesModel",
        "from .reasoning_effort import ReasoningEffort as ReasoningEffort",
        "from .comparison_filter import ComparisonFilter as ComparisonFilter",
        "from .function_definition import FunctionDefinition as FunctionDefinition",
        "from .function_parameters import FunctionParameters as FunctionParameters",
        "from .response_format_text import ResponseFormatText as ResponseFormatText",
        "from .custom_tool_input_format import CustomToolInputFormat as CustomToolInputFormat",
        "from .response_format_json_object import ResponseFormatJSONObject as ResponseFormatJSONObject",
        "from .response_format_json_schema import ResponseFormatJSONSchema as ResponseFormatJSONSchema",
        "from .response_format_text_python import ResponseFormatTextPython as ResponseFormatTextPython",
        "from .response_format_text_grammar import ResponseFormatTextGrammar as ResponseFormatTextGrammar"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/shared_params/__init__.py",
      "current_size_lines": 14,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .metadata import Metadata as Metadata",
        "from .reasoning import Reasoning as Reasoning",
        "from .chat_model import ChatModel as ChatModel",
        "from .compound_filter import CompoundFilter as CompoundFilter",
        "from .responses_model import ResponsesModel as ResponsesModel",
        "from .reasoning_effort import ReasoningEffort as ReasoningEffort",
        "from .comparison_filter import ComparisonFilter as ComparisonFilter",
        "from .function_definition import FunctionDefinition as FunctionDefinition",
        "from .function_parameters import FunctionParameters as FunctionParameters",
        "from .response_format_text import ResponseFormatText as ResponseFormatText",
        "from .custom_tool_input_format import CustomToolInputFormat as CustomToolInputFormat",
        "from .response_format_json_object import ResponseFormatJSONObject as ResponseFormatJSONObject",
        "from .response_format_json_schema import ResponseFormatJSONSchema as ResponseFormatJSONSchema"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/audio/__init__.py",
      "current_size_lines": 18,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .translation import Translation as Translation",
        "from .speech_model import SpeechModel as SpeechModel",
        "from .transcription import Transcription as Transcription",
        "from .transcription_word import TranscriptionWord as TranscriptionWord",
        "from .translation_verbose import TranslationVerbose as TranslationVerbose",
        "from .speech_create_params import SpeechCreateParams as SpeechCreateParams",
        "from .transcription_include import TranscriptionInclude as TranscriptionInclude",
        "from .transcription_segment import TranscriptionSegment as TranscriptionSegment",
        "from .transcription_verbose import TranscriptionVerbose as TranscriptionVerbose",
        "from .translation_create_params import TranslationCreateParams as TranslationCreateParams",
        "from .transcription_stream_event import TranscriptionStreamEvent as TranscriptionStreamEvent",
        "from .transcription_create_params import TranscriptionCreateParams as TranscriptionCreateParams",
        "from .translation_create_response import TranslationCreateResponse as TranslationCreateResponse",
        "from .transcription_create_response import TranscriptionCreateResponse as TranscriptionCreateResponse",
        "from .transcription_text_done_event import TranscriptionTextDoneEvent as TranscriptionTextDoneEvent",
        "from .transcription_text_delta_event import TranscriptionTextDeltaEvent as TranscriptionTextDeltaEvent"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/containers/__init__.py",
      "current_size_lines": 7,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .file_list_params import FileListParams as FileListParams",
        "from .file_create_params import FileCreateParams as FileCreateParams",
        "from .file_list_response import FileListResponse as FileListResponse",
        "from .file_create_response import FileCreateResponse as FileCreateResponse",
        "from .file_retrieve_response import FileRetrieveResponse as FileRetrieveResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/webhooks/__init__.py",
      "current_size_lines": 21,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .unwrap_webhook_event import UnwrapWebhookEvent as UnwrapWebhookEvent",
        "from .batch_failed_webhook_event import BatchFailedWebhookEvent as BatchFailedWebhookEvent",
        "from .batch_expired_webhook_event import BatchExpiredWebhookEvent as BatchExpiredWebhookEvent",
        "from .batch_cancelled_webhook_event import BatchCancelledWebhookEvent as BatchCancelledWebhookEvent",
        "from .batch_completed_webhook_event import BatchCompletedWebhookEvent as BatchCompletedWebhookEvent",
        "from .eval_run_failed_webhook_event import EvalRunFailedWebhookEvent as EvalRunFailedWebhookEvent",
        "from .response_failed_webhook_event import ResponseFailedWebhookEvent as ResponseFailedWebhookEvent",
        "from .eval_run_canceled_webhook_event import EvalRunCanceledWebhookEvent as EvalRunCanceledWebhookEvent",
        "from .eval_run_succeeded_webhook_event import EvalRunSucceededWebhookEvent as EvalRunSucceededWebhookEvent",
        "from .response_cancelled_webhook_event import ResponseCancelledWebhookEvent as ResponseCancelledWebhookEvent",
        "from .response_completed_webhook_event import ResponseCompletedWebhookEvent as ResponseCompletedWebhookEvent",
        "from .response_incomplete_webhook_event import ResponseIncompleteWebhookEvent as ResponseIncompleteWebhookEvent",
        "from .fine_tuning_job_failed_webhook_event import FineTuningJobFailedWebhookEvent as FineTuningJobFailedWebhookEvent",
        "from .fine_tuning_job_cancelled_webhook_event import (",
        "from .fine_tuning_job_succeeded_webhook_event import ("
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/graders/__init__.py",
      "current_size_lines": 14,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .multi_grader import MultiGrader as MultiGrader",
        "from .python_grader import PythonGrader as PythonGrader",
        "from .label_model_grader import LabelModelGrader as LabelModelGrader",
        "from .multi_grader_param import MultiGraderParam as MultiGraderParam",
        "from .score_model_grader import ScoreModelGrader as ScoreModelGrader",
        "from .python_grader_param import PythonGraderParam as PythonGraderParam",
        "from .string_check_grader import StringCheckGrader as StringCheckGrader",
        "from .text_similarity_grader import TextSimilarityGrader as TextSimilarityGrader",
        "from .label_model_grader_param import LabelModelGraderParam as LabelModelGraderParam",
        "from .score_model_grader_param import ScoreModelGraderParam as ScoreModelGraderParam",
        "from .string_check_grader_param import StringCheckGraderParam as StringCheckGraderParam",
        "from .text_similarity_grader_param import TextSimilarityGraderParam as TextSimilarityGraderParam"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/beta/chat/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/beta/realtime/__init__.py",
      "current_size_lines": 94,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .session import Session as Session",
        "from .error_event import ErrorEvent as ErrorEvent",
        "from .conversation_item import ConversationItem as ConversationItem",
        "from .realtime_response import RealtimeResponse as RealtimeResponse",
        "from .response_done_event import ResponseDoneEvent as ResponseDoneEvent",
        "from .session_update_event import SessionUpdateEvent as SessionUpdateEvent",
        "from .realtime_client_event import RealtimeClientEvent as RealtimeClientEvent",
        "from .realtime_server_event import RealtimeServerEvent as RealtimeServerEvent",
        "from .response_cancel_event import ResponseCancelEvent as ResponseCancelEvent",
        "from .response_create_event import ResponseCreateEvent as ResponseCreateEvent",
        "from .session_create_params import SessionCreateParams as SessionCreateParams",
        "from .session_created_event import SessionCreatedEvent as SessionCreatedEvent",
        "from .session_updated_event import SessionUpdatedEvent as SessionUpdatedEvent",
        "from .transcription_session import TranscriptionSession as TranscriptionSession",
        "from .response_created_event import ResponseCreatedEvent as ResponseCreatedEvent",
        "from .conversation_item_param import ConversationItemParam as ConversationItemParam",
        "from .realtime_connect_params import RealtimeConnectParams as RealtimeConnectParams",
        "from .realtime_response_usage import RealtimeResponseUsage as RealtimeResponseUsage",
        "from .session_create_response import SessionCreateResponse as SessionCreateResponse",
        "from .realtime_response_status import RealtimeResponseStatus as RealtimeResponseStatus",
        "from .response_text_done_event import ResponseTextDoneEvent as ResponseTextDoneEvent",
        "from .conversation_item_content import ConversationItemContent as ConversationItemContent",
        "from .rate_limits_updated_event import RateLimitsUpdatedEvent as RateLimitsUpdatedEvent",
        "from .response_audio_done_event import ResponseAudioDoneEvent as ResponseAudioDoneEvent",
        "from .response_text_delta_event import ResponseTextDeltaEvent as ResponseTextDeltaEvent",
        "from .conversation_created_event import ConversationCreatedEvent as ConversationCreatedEvent",
        "from .response_audio_delta_event import ResponseAudioDeltaEvent as ResponseAudioDeltaEvent",
        "from .session_update_event_param import SessionUpdateEventParam as SessionUpdateEventParam",
        "from .realtime_client_event_param import RealtimeClientEventParam as RealtimeClientEventParam",
        "from .response_cancel_event_param import ResponseCancelEventParam as ResponseCancelEventParam",
        "from .response_create_event_param import ResponseCreateEventParam as ResponseCreateEventParam",
        "from .transcription_session_update import TranscriptionSessionUpdate as TranscriptionSessionUpdate",
        "from .conversation_item_create_event import ConversationItemCreateEvent as ConversationItemCreateEvent",
        "from .conversation_item_delete_event import ConversationItemDeleteEvent as ConversationItemDeleteEvent",
        "from .input_audio_buffer_clear_event import InputAudioBufferClearEvent as InputAudioBufferClearEvent",
        "from .conversation_item_content_param import ConversationItemContentParam as ConversationItemContentParam",
        "from .conversation_item_created_event import ConversationItemCreatedEvent as ConversationItemCreatedEvent",
        "from .conversation_item_deleted_event import ConversationItemDeletedEvent as ConversationItemDeletedEvent",
        "from .input_audio_buffer_append_event import InputAudioBufferAppendEvent as InputAudioBufferAppendEvent",
        "from .input_audio_buffer_commit_event import InputAudioBufferCommitEvent as InputAudioBufferCommitEvent",
        "from .response_output_item_done_event import ResponseOutputItemDoneEvent as ResponseOutputItemDoneEvent",
        "from .conversation_item_retrieve_event import ConversationItemRetrieveEvent as ConversationItemRetrieveEvent",
        "from .conversation_item_truncate_event import ConversationItemTruncateEvent as ConversationItemTruncateEvent",
        "from .conversation_item_with_reference import ConversationItemWithReference as ConversationItemWithReference",
        "from .input_audio_buffer_cleared_event import InputAudioBufferClearedEvent as InputAudioBufferClearedEvent",
        "from .response_content_part_done_event import ResponseContentPartDoneEvent as ResponseContentPartDoneEvent",
        "from .response_output_item_added_event import ResponseOutputItemAddedEvent as ResponseOutputItemAddedEvent",
        "from .conversation_item_truncated_event import ConversationItemTruncatedEvent as ConversationItemTruncatedEvent",
        "from .response_content_part_added_event import ResponseContentPartAddedEvent as ResponseContentPartAddedEvent",
        "from .input_audio_buffer_committed_event import InputAudioBufferCommittedEvent as InputAudioBufferCommittedEvent",
        "from .transcription_session_update_param import TranscriptionSessionUpdateParam as TranscriptionSessionUpdateParam",
        "from .transcription_session_create_params import TranscriptionSessionCreateParams as TranscriptionSessionCreateParams",
        "from .transcription_session_updated_event import TranscriptionSessionUpdatedEvent as TranscriptionSessionUpdatedEvent",
        "from .conversation_item_create_event_param import ConversationItemCreateEventParam as ConversationItemCreateEventParam",
        "from .conversation_item_delete_event_param import ConversationItemDeleteEventParam as ConversationItemDeleteEventParam",
        "from .input_audio_buffer_clear_event_param import InputAudioBufferClearEventParam as InputAudioBufferClearEventParam",
        "from .response_audio_transcript_done_event import ResponseAudioTranscriptDoneEvent as ResponseAudioTranscriptDoneEvent",
        "from .input_audio_buffer_append_event_param import InputAudioBufferAppendEventParam as InputAudioBufferAppendEventParam",
        "from .input_audio_buffer_commit_event_param import InputAudioBufferCommitEventParam as InputAudioBufferCommitEventParam",
        "from .response_audio_transcript_delta_event import (",
        "from .conversation_item_retrieve_event_param import (",
        "from .conversation_item_truncate_event_param import (",
        "from .conversation_item_with_reference_param import (",
        "from .input_audio_buffer_speech_started_event import (",
        "from .input_audio_buffer_speech_stopped_event import (",
        "from .response_function_call_arguments_done_event import (",
        "from .response_function_call_arguments_delta_event import (",
        "from .conversation_item_input_audio_transcription_delta_event import (",
        "from .conversation_item_input_audio_transcription_failed_event import (",
        "from .conversation_item_input_audio_transcription_completed_event import ("
      ],
      "estimated_loc_savings": 19,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/beta/threads/__init__.py",
      "current_size_lines": 44,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .run import Run as Run",
        "from .text import Text as Text",
        "from .message import Message as Message",
        "from .image_url import ImageURL as ImageURL",
        "from .annotation import Annotation as Annotation",
        "from .image_file import ImageFile as ImageFile",
        "from .run_status import RunStatus as RunStatus",
        "from .text_delta import TextDelta as TextDelta",
        "from .message_delta import MessageDelta as MessageDelta",
        "from .image_url_delta import ImageURLDelta as ImageURLDelta",
        "from .image_url_param import ImageURLParam as ImageURLParam",
        "from .message_content import MessageContent as MessageContent",
        "from .message_deleted import MessageDeleted as MessageDeleted",
        "from .run_list_params import RunListParams as RunListParams",
        "from .annotation_delta import AnnotationDelta as AnnotationDelta",
        "from .image_file_delta import ImageFileDelta as ImageFileDelta",
        "from .image_file_param import ImageFileParam as ImageFileParam",
        "from .text_delta_block import TextDeltaBlock as TextDeltaBlock",
        "from .run_create_params import RunCreateParams as RunCreateParams",
        "from .run_update_params import RunUpdateParams as RunUpdateParams",
        "from .text_content_block import TextContentBlock as TextContentBlock",
        "from .message_delta_event import MessageDeltaEvent as MessageDeltaEvent",
        "from .message_list_params import MessageListParams as MessageListParams",
        "from .refusal_delta_block import RefusalDeltaBlock as RefusalDeltaBlock",
        "from .file_path_annotation import FilePathAnnotation as FilePathAnnotation",
        "from .image_url_delta_block import ImageURLDeltaBlock as ImageURLDeltaBlock",
        "from .message_content_delta import MessageContentDelta as MessageContentDelta",
        "from .message_create_params import MessageCreateParams as MessageCreateParams",
        "from .message_update_params import MessageUpdateParams as MessageUpdateParams",
        "from .refusal_content_block import RefusalContentBlock as RefusalContentBlock",
        "from .image_file_delta_block import ImageFileDeltaBlock as ImageFileDeltaBlock",
        "from .image_url_content_block import ImageURLContentBlock as ImageURLContentBlock",
        "from .file_citation_annotation import FileCitationAnnotation as FileCitationAnnotation",
        "from .image_file_content_block import ImageFileContentBlock as ImageFileContentBlock",
        "from .text_content_block_param import TextContentBlockParam as TextContentBlockParam",
        "from .file_path_delta_annotation import FilePathDeltaAnnotation as FilePathDeltaAnnotation",
        "from .message_content_part_param import MessageContentPartParam as MessageContentPartParam",
        "from .image_url_content_block_param import ImageURLContentBlockParam as ImageURLContentBlockParam",
        "from .file_citation_delta_annotation import FileCitationDeltaAnnotation as FileCitationDeltaAnnotation",
        "from .image_file_content_block_param import ImageFileContentBlockParam as ImageFileContentBlockParam",
        "from .run_submit_tool_outputs_params import RunSubmitToolOutputsParams as RunSubmitToolOutputsParams",
        "from .required_action_function_tool_call import RequiredActionFunctionToolCall as RequiredActionFunctionToolCall"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/beta/threads/runs/__init__.py",
      "current_size_lines": 22,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .run_step import RunStep as RunStep",
        "from .tool_call import ToolCall as ToolCall",
        "from .run_step_delta import RunStepDelta as RunStepDelta",
        "from .tool_call_delta import ToolCallDelta as ToolCallDelta",
        "from .run_step_include import RunStepInclude as RunStepInclude",
        "from .step_list_params import StepListParams as StepListParams",
        "from .function_tool_call import FunctionToolCall as FunctionToolCall",
        "from .run_step_delta_event import RunStepDeltaEvent as RunStepDeltaEvent",
        "from .step_retrieve_params import StepRetrieveParams as StepRetrieveParams",
        "from .code_interpreter_logs import CodeInterpreterLogs as CodeInterpreterLogs",
        "from .file_search_tool_call import FileSearchToolCall as FileSearchToolCall",
        "from .tool_call_delta_object import ToolCallDeltaObject as ToolCallDeltaObject",
        "from .tool_calls_step_details import ToolCallsStepDetails as ToolCallsStepDetails",
        "from .function_tool_call_delta import FunctionToolCallDelta as FunctionToolCallDelta",
        "from .code_interpreter_tool_call import CodeInterpreterToolCall as CodeInterpreterToolCall",
        "from .file_search_tool_call_delta import FileSearchToolCallDelta as FileSearchToolCallDelta",
        "from .run_step_delta_message_delta import RunStepDeltaMessageDelta as RunStepDeltaMessageDelta",
        "from .code_interpreter_output_image import CodeInterpreterOutputImage as CodeInterpreterOutputImage",
        "from .message_creation_step_details import MessageCreationStepDetails as MessageCreationStepDetails",
        "from .code_interpreter_tool_call_delta import CodeInterpreterToolCallDelta as CodeInterpreterToolCallDelta"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/evals/runs/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .output_item_list_params import OutputItemListParams as OutputItemListParams",
        "from .output_item_list_response import OutputItemListResponse as OutputItemListResponse",
        "from .output_item_retrieve_response import OutputItemRetrieveResponse as OutputItemRetrieveResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/fine_tuning/checkpoints/__init__.py",
      "current_size_lines": 7,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .permission_create_params import PermissionCreateParams as PermissionCreateParams",
        "from .permission_create_response import PermissionCreateResponse as PermissionCreateResponse",
        "from .permission_delete_response import PermissionDeleteResponse as PermissionDeleteResponse",
        "from .permission_retrieve_params import PermissionRetrieveParams as PermissionRetrieveParams",
        "from .permission_retrieve_response import PermissionRetrieveResponse as PermissionRetrieveResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/fine_tuning/jobs/__init__.py",
      "current_size_lines": 4,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .checkpoint_list_params import CheckpointListParams as CheckpointListParams",
        "from .fine_tuning_job_checkpoint import FineTuningJobCheckpoint as FineTuningJobCheckpoint"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/fine_tuning/alpha/__init__.py",
      "current_size_lines": 6,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .grader_run_params import GraderRunParams as GraderRunParams",
        "from .grader_run_response import GraderRunResponse as GraderRunResponse",
        "from .grader_validate_params import GraderValidateParams as GraderValidateParams",
        "from .grader_validate_response import GraderValidateResponse as GraderValidateResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/chat/completions/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .message_list_params import MessageListParams as MessageListParams"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/types/containers/files/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/beta/__init__.py",
      "current_size_lines": 45,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .threads import (",
        "from .assistants import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 36,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/vector_stores/__init__.py",
      "current_size_lines": 45,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .files import (",
        "from .file_batches import (",
        "from .vector_stores import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 36,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/evals/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .runs import (",
        "from .evals import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/fine_tuning/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .jobs import (",
        "from .alpha import (",
        "from .checkpoints import (",
        "from .fine_tuning import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/chat/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .chat import (",
        "from .completions import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/responses/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .responses import (",
        "from .input_items import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/uploads/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .parts import (",
        "from .uploads import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/audio/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .audio import (",
        "from .speech import (",
        "from .translations import (",
        "from .transcriptions import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/containers/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .files import (",
        "from .containers import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/beta/realtime/__init__.py",
      "current_size_lines": 45,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .realtime import (",
        "from .sessions import (",
        "from .transcription_sessions import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 36,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/openai/resources/beta/threads/__init__.py",
      "current_size_lines": 45,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .runs import (",
        "from .threads import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 36,
      "requires_standardization": true
    }
  ],
  "estimated_loc_savings": 942,
  "file_count": 50
}