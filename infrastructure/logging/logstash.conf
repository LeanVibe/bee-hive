# Logstash configuration for LeanVibe Agent Hive 2.0
# Centralized log processing and aggregation for dashboard components

input {
  # Beats input for log shipping from containers
  beats {
    port => 5044
  }
  
  # JSON logs over TCP (for FastAPI structured logs)
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # UDP logs for high-volume logging
  udp {
    port => 5000
    codec => json_lines
  }
  
  # Redis input for agent logs
  redis {
    host => "redis"
    port => 6379
    password => "${REDIS_PASSWORD}"
    key => "agent_logs"
    data_type => "list"
    codec => json_lines
  }
  
  # File input for container logs (fallback)
  file {
    path => "/var/log/containers/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json_lines
  }
}

filter {
  # Parse timestamp from various formats
  date {
    match => [ 
      "timestamp", "ISO8601",
      "@timestamp", "ISO8601",
      "time", "ISO8601"
    ]
  }
  
  # Parse structured logs from FastAPI
  if [logger_name] {
    mutate {
      add_field => { "service" => "leanvibe-api" }
      add_field => { "component" => "%{logger_name}" }
    }
  }
  
  # Extract agent information from logs
  if [agent_id] {
    mutate {
      add_field => { "service" => "leanvibe-agent" }
      add_field => { "agent_identifier" => "%{agent_id}" }
    }
  }
  
  # Parse dashboard logs
  if [component] == "dashboard" {
    mutate {
      add_field => { "service" => "leanvibe-dashboard" }
    }
    
    # Extract performance metrics from dashboard logs
    if [response_time] {
      mutate {
        convert => { "response_time" => "integer" }
      }
    }
  }
  
  # Parse coordination logs
  if [event_type] == "coordination" {
    mutate {
      add_field => { "category" => "coordination" }
    }
    
    # Extract coordination success/failure information
    if [success] {
      mutate {
        convert => { "success" => "boolean" }
      }
    }
  }
  
  # Parse security logs
  if [component] == "security" or [event_type] == "security" {
    mutate {
      add_field => { "category" => "security" }
      add_field => { "priority" => "high" }
    }
    
    # Tag authentication events
    if [event] =~ /auth/ {
      mutate {
        add_tag => [ "authentication" ]
      }
    }
    
    # Tag vulnerability events
    if [vulnerability] {
      mutate {
        add_tag => [ "vulnerability" ]
        add_field => { "priority" => "critical" }
      }
    }
  }
  
  # Parse performance logs
  if [category] == "performance" {
    mutate {
      add_field => { "service" => "leanvibe-performance" }
    }
    
    # Convert numeric fields
    if [cpu_usage] {
      mutate {
        convert => { "cpu_usage" => "float" }
      }
    }
    
    if [memory_usage] {
      mutate {
        convert => { "memory_usage" => "integer" }
      }
    }
  }
  
  # Parse WebSocket logs
  if [websocket] {
    mutate {
      add_field => { "category" => "websocket" }
      add_field => { "service" => "leanvibe-websockets" }
    }
    
    # Extract connection metrics
    if [connection_count] {
      mutate {
        convert => { "connection_count" => "integer" }
      }
    }
  }
  
  # Add environment information
  mutate {
    add_field => { "environment" => "${ENVIRONMENT:development}" }
    add_field => { "cluster" => "leanvibe-agent-hive" }
    add_field => { "processed_at" => "%{@timestamp}" }
  }
  
  # Parse error logs
  if [level] == "ERROR" or [level] == "CRITICAL" {
    mutate {
      add_tag => [ "error" ]
      add_field => { "priority" => "high" }
    }
  }
  
  # Parse mobile dashboard logs
  if [user_agent] =~ /Mobile/ {
    mutate {
      add_tag => [ "mobile" ]
      add_field => { "device_type" => "mobile" }
    }
  }
  
  # Drop health check logs to reduce noise
  if [path] == "/health" or [path] == "/metrics" {
    drop { }
  }
  
  # Remove sensitive information
  mutate {
    remove_field => [ "password", "api_key", "token", "secret" ]
  }
}

output {
  # Main Elasticsearch output
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "leanvibe-logs-%{+YYYY.MM.dd}"
    template_name => "leanvibe-logs"
    template => "/usr/share/logstash/templates/leanvibe-logs.json"
    template_overwrite => true
  }
  
  # Separate index for error logs
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "leanvibe-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # Separate index for security logs
  if [category] == "security" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "leanvibe-security-%{+YYYY.MM.dd}"
    }
  }
  
  # Separate index for coordination logs
  if [category] == "coordination" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "leanvibe-coordination-%{+YYYY.MM.dd}"
    }
  }
  
  # Separate index for performance logs
  if [category] == "performance" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "leanvibe-performance-%{+YYYY.MM.dd}"
    }
  }
  
  # Debug output for development
  if "${ENVIRONMENT:development}" == "development" {
    stdout {
      codec => rubydebug
    }
  }
  
  # Dead letter queue for failed documents
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "leanvibe-failed-logs-%{+YYYY.MM.dd}"
    routing => "failed"
    document_id => "%{[@metadata][_id]}_failed"
    # Only for documents that failed main processing
    if [@metadata][failed] {
      # Process failed documents
    }
  }
}