# External Secrets Management for LeanVibe Agent Hive 2.0
# Integrates with AWS Secrets Manager, Azure Key Vault, GCP Secret Manager, and HashiCorp Vault

---
# External Secrets Operator Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-system
  labels:
    name: external-secrets-system
    security-policy: restricted

---
# SecretStore for AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: leanvibe-aws-secret-store
  namespace: leanvibe-hive
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        secretRef:
          accessKeyIDSecretRef:
            name: aws-credentials
            key: access-key-id
          secretAccessKeySecretRef:
            name: aws-credentials
            key: secret-access-key

---
# SecretStore for Azure Key Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: leanvibe-azure-secret-store
  namespace: leanvibe-hive
spec:
  provider:
    azurekv:
      vaultUrl: "https://leanvibe-keyvault.vault.azure.net/"
      authType: ServicePrincipal
      servicePrincipalSecretRef:
        clientId:
          name: azure-credentials
          key: client-id
        clientSecret:
          name: azure-credentials
          key: client-secret
      tenantId: "your-tenant-id"

---
# SecretStore for Google Cloud Secret Manager
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: leanvibe-gcp-secret-store
  namespace: leanvibe-hive
spec:
  provider:
    gcpsm:
      projectId: leanvibe-production
      auth:
        secretRef:
          secretAccessKey:
            name: gcp-credentials
            key: service-account-key

---
# SecretStore for HashiCorp Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: leanvibe-vault-secret-store
  namespace: leanvibe-hive
spec:
  provider:
    vault:
      server: "https://vault.leanvibe.com:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "leanvibe-agent-role"

---
# External Secret for Database Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: leanvibe-database-secret
  namespace: leanvibe-hive
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: leanvibe-aws-secret-store  # Can be changed to any provider
    kind: SecretStore
  target:
    name: leanvibe-database-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        DATABASE_PASSWORD: "{{ .database_password | toString }}"
        DATABASE_ADMIN_PASSWORD: "{{ .database_admin_password | toString }}"
  data:
    - secretKey: database_password
      remoteRef:
        key: leanvibe/database
        property: password
    - secretKey: database_admin_password
      remoteRef:
        key: leanvibe/database
        property: admin_password

---
# External Secret for Redis Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: leanvibe-redis-secret
  namespace: leanvibe-hive
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: leanvibe-aws-secret-store
    kind: SecretStore
  target:
    name: leanvibe-redis-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        REDIS_PASSWORD: "{{ .redis_password | toString }}"
  data:
    - secretKey: redis_password
      remoteRef:
        key: leanvibe/redis
        property: password

---
# External Secret for API Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: leanvibe-api-keys-secret
  namespace: leanvibe-hive
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: leanvibe-aws-secret-store
    kind: SecretStore
  target:
    name: leanvibe-api-keys
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        ANTHROPIC_API_KEY: "{{ .anthropic_api_key | toString }}"
        JWT_SECRET_KEY: "{{ .jwt_secret_key | toString }}"
        GITHUB_API_TOKEN: "{{ .github_api_token | toString }}"
  data:
    - secretKey: anthropic_api_key
      remoteRef:
        key: leanvibe/api-keys
        property: anthropic_api_key
    - secretKey: jwt_secret_key
      remoteRef:
        key: leanvibe/api-keys
        property: jwt_secret_key
    - secretKey: github_api_token
      remoteRef:
        key: leanvibe/api-keys
        property: github_api_token

---
# External Secret for Encryption Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: leanvibe-encryption-secret
  namespace: leanvibe-hive
spec:
  refreshInterval: 30m  # Less frequent refresh for encryption keys
  secretStoreRef:
    name: leanvibe-aws-secret-store
    kind: SecretStore
  target:
    name: leanvibe-encryption-keys
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        MASTER_ENCRYPTION_KEY: "{{ .master_encryption_key | toString }}"
        BACKUP_ENCRYPTION_KEY: "{{ .backup_encryption_key | toString }}"
  data:
    - secretKey: master_encryption_key
      remoteRef:
        key: leanvibe/encryption
        property: master_key
    - secretKey: backup_encryption_key
      remoteRef:
        key: leanvibe/encryption
        property: backup_key

---
# ClusterRole for External Secrets Operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: leanvibe-external-secrets-reader
rules:
  - apiGroups: ["external-secrets.io"]
    resources: ["secretstores", "externalsecrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# ClusterRoleBinding for External Secrets Operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: leanvibe-external-secrets-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: leanvibe-external-secrets-reader
subjects:
  - kind: ServiceAccount
    name: leanvibe-external-secrets-sa
    namespace: leanvibe-hive

---
# Service Account for External Secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: leanvibe-external-secrets-sa
  namespace: leanvibe-hive
  annotations:
    # For AWS IRSA (IAM Role for Service Accounts)
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT-ID:role/leanvibe-external-secrets-role
    # For GCP Workload Identity
    iam.gke.io/gcp-service-account: leanvibe-external-secrets@PROJECT-ID.iam.gserviceaccount.com

---
# Push Secret for monitoring secret status
apiVersion: external-secrets.io/v1beta1
kind: PushSecret
metadata:
  name: leanvibe-secret-status-push
  namespace: leanvibe-hive
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: leanvibe-aws-secret-store
    kind: SecretStore
  selector:
    secret:
      name: leanvibe-secret-status
  data:
    - match:
        secretKey: "*"
        remoteRef:
          remoteKey: leanvibe/monitoring/secret-status