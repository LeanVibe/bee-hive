# Kubernetes deployments for LeanVibe containerized agents
# Replaces tmux session management with Kubernetes pod orchestration

---
# Architecture Agent Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-architect
  namespace: leanvibe-hive
  labels:
    app: leanvibe-agent
    agent-type: architect
    component: autonomous-development
spec:
  replicas: 3  # Will be controlled by HPA
  selector:
    matchLabels:
      app: leanvibe-agent
      agent-type: architect
  template:
    metadata:
      labels:
        app: leanvibe-agent
        agent-type: architect
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: agent-architect
        image: leanvibe/agent-architect:latest
        imagePullPolicy: Always
        env:
        - name: AGENT_TYPE
          value: "architect"
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: ANTHROPIC_API_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_NAME
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: REDIS_PASSWORD
        ports:
        - name: health
          containerPort: 8080
        - name: metrics
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: workspace
          mountPath: /app/workspace
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: workspace
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# Developer Agent Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-developer
  namespace: leanvibe-hive
  labels:
    app: leanvibe-agent
    agent-type: developer
    component: autonomous-development
spec:
  replicas: 5  # Higher replicas for development workload
  selector:
    matchLabels:
      app: leanvibe-agent
      agent-type: developer
  template:
    metadata:
      labels:
        app: leanvibe-agent
        agent-type: developer
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: agent-developer
        image: leanvibe/agent-developer:latest
        imagePullPolicy: Always
        env:
        - name: AGENT_TYPE
          value: "developer"
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: ANTHROPIC_API_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_NAME
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: REDIS_PASSWORD
        ports:
        - name: health
          containerPort: 8080
        - name: metrics
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "750m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: workspace
          mountPath: /app/workspace
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: workspace
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# QA Agent Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-qa
  namespace: leanvibe-hive
  labels:
    app: leanvibe-agent
    agent-type: qa
    component: autonomous-development
spec:
  replicas: 2
  selector:
    matchLabels:
      app: leanvibe-agent
      agent-type: qa
  template:
    metadata:
      labels:
        app: leanvibe-agent
        agent-type: qa
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: agent-qa
        image: leanvibe/agent-qa:latest
        imagePullPolicy: Always
        env:
        - name: AGENT_TYPE
          value: "qa"
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: ANTHROPIC_API_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_NAME
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: REDIS_PASSWORD
        ports:
        - name: health
          containerPort: 8080
        - name: metrics
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: workspace
          mountPath: /app/workspace
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: workspace
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# Meta Agent Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-meta
  namespace: leanvibe-hive
  labels:
    app: leanvibe-agent
    agent-type: meta
    component: autonomous-development
spec:
  replicas: 1  # Single meta agent for coordination
  selector:
    matchLabels:
      app: leanvibe-agent
      agent-type: meta
  template:
    metadata:
      labels:
        app: leanvibe-agent
        agent-type: meta
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: agent-meta
        image: leanvibe/agent-meta:latest
        imagePullPolicy: Always
        env:
        - name: AGENT_TYPE
          value: "meta"
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: ANTHROPIC_API_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: DATABASE_NAME
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: leanvibe-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: leanvibe-secrets
              key: REDIS_PASSWORD
        ports:
        - name: health
          containerPort: 8080
        - name: metrics
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: workspace
          mountPath: /app/workspace
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: workspace
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always