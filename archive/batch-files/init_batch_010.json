{
  "batch_id": "init_batch_010",
  "files": [
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/contrib/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/key_binding/__init__.py",
      "current_size_lines": 20,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .key_bindings import (",
        "from .key_processor import KeyPress, KeyPressEvent",
        "__all__ = ["
      ],
      "estimated_loc_savings": 12,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/styles/__init__.py",
      "current_size_lines": 64,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import (",
        "from .defaults import default_pygments_style, default_ui_style",
        "from .named_colors import NAMED_COLORS",
        "from .pygments import (",
        "from .style import Priority, Style, merge_styles, parse_color",
        "from .style_transformation import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 52,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/shortcuts/__init__.py",
      "current_size_lines": 44,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .dialogs import (",
        "from .progress_bar import ProgressBar, ProgressBarCounter",
        "from .prompt import (",
        "from .utils import clear, clear_title, print_container, print_formatted_text, set_title",
        "__all__ = ["
      ],
      "estimated_loc_savings": 34,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/formatted_text/__init__.py",
      "current_size_lines": 55,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .ansi import ANSI",
        "from .base import (",
        "from .html import HTML",
        "from .pygments import PygmentsTokens",
        "from .utils import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 44,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/eventloop/__init__.py",
      "current_size_lines": 29,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .async_generator import aclosing, generator_to_async_generator",
        "from .inputhook import (",
        "from .utils import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 20,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/application/__init__.py",
      "current_size_lines": 30,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .application import Application",
        "from .current import (",
        "from .dummy import DummyApplication",
        "from .run_in_terminal import in_terminal, run_in_terminal",
        "__all__ = ["
      ],
      "estimated_loc_savings": 20,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/widgets/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import (",
        "from .dialogs import Dialog",
        "from .menus import MenuContainer, MenuItem",
        "from .toolbars import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/clipboard/__init__.py",
      "current_size_lines": 13,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import Clipboard, ClipboardData, DummyClipboard, DynamicClipboard",
        "from .in_memory import InMemoryClipboard",
        "__all__ = ["
      ],
      "estimated_loc_savings": 5,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/contrib/completers/__init__.py",
      "current_size_lines": 3,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .system import SystemCompleter",
        "__all__ = [\"SystemCompleter\"]"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/contrib/regular_languages/__init__.py",
      "current_size_lines": 62,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .compiler import compile",
        "__all__ = [\"compile\"]"
      ],
      "estimated_loc_savings": 55,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/contrib/ssh/__init__.py",
      "current_size_lines": 6,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .server import PromptToolkitSSHServer, PromptToolkitSSHSession",
        "__all__ = ["
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/contrib/telnet/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .server import TelnetServer",
        "__all__ = ["
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/key_binding/bindings/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prompt_toolkit/shortcuts/progress_bar/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import ProgressBar, ProgressBarCounter",
        "from .formatters import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/sniffio/_tests/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/tqdm/contrib/__init__.py",
      "current_size_lines": 73,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from ..auto import tqdm as tqdm_auto",
        "from ..std import TqdmDeprecationWarning, tqdm",
        "from ..utils import ObjectWrapper",
        "__author__ = {\"github.com/\": [\"casperdcl\"]}",
        "__all__ = ['tenumerate', 'tzip', 'tmap']"
      ],
      "estimated_loc_savings": 63,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/radon/tests/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/radon/cli/__init__.py",
      "current_size_lines": 381,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "program = Program(version=sys.modules['radon'].__version__)"
      ],
      "estimated_loc_savings": 375,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/radon/contrib/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/radon/tests/data/__init__.py",
      "current_size_lines": 3,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/fastapi/middleware/__init__.py",
      "current_size_lines": 1,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/fastapi/security/__init__.py",
      "current_size_lines": 15,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .api_key import APIKeyCookie as APIKeyCookie",
        "from .api_key import APIKeyHeader as APIKeyHeader",
        "from .api_key import APIKeyQuery as APIKeyQuery",
        "from .http import HTTPAuthorizationCredentials as HTTPAuthorizationCredentials",
        "from .http import HTTPBasic as HTTPBasic",
        "from .http import HTTPBasicCredentials as HTTPBasicCredentials",
        "from .http import HTTPBearer as HTTPBearer",
        "from .http import HTTPDigest as HTTPDigest",
        "from .oauth2 import OAuth2 as OAuth2",
        "from .oauth2 import OAuth2AuthorizationCodeBearer as OAuth2AuthorizationCodeBearer",
        "from .oauth2 import OAuth2PasswordBearer as OAuth2PasswordBearer",
        "from .oauth2 import OAuth2PasswordRequestForm as OAuth2PasswordRequestForm",
        "from .oauth2 import OAuth2PasswordRequestFormStrict as OAuth2PasswordRequestFormStrict",
        "from .oauth2 import SecurityScopes as SecurityScopes",
        "from .open_id_connect_url import OpenIdConnect as OpenIdConnect"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/fastapi/dependencies/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/fastapi/openapi/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/nacl/bindings/__init__.py",
      "current_size_lines": 445,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = ["
      ],
      "estimated_loc_savings": 439,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/nacl/pwhash/__init__.py",
      "current_size_lines": 61,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from . import _argon2, argon2i, argon2id, scrypt"
      ],
      "estimated_loc_savings": 55,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/registration/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/authentication/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/helpers/__init__.py",
      "current_size_lines": 50,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .aaguid_to_string import aaguid_to_string",
        "from .base64url_to_bytes import base64url_to_bytes",
        "from .bytes_to_base64url import bytes_to_base64url",
        "from .byteslike_to_bytes import byteslike_to_bytes",
        "from .decode_credential_public_key import decode_credential_public_key",
        "from .decoded_public_key_to_cryptography import decoded_public_key_to_cryptography",
        "from .encode_cbor import encode_cbor",
        "from .generate_challenge import generate_challenge",
        "from .generate_user_handle import generate_user_handle",
        "from .hash_by_alg import hash_by_alg",
        "from .options_to_json import options_to_json",
        "from .options_to_json_dict import options_to_json_dict",
        "from .parse_attestation_object import parse_attestation_object",
        "from .parse_authentication_credential_json import parse_authentication_credential_json",
        "from .parse_authentication_options_json import parse_authentication_options_json",
        "from .parse_authenticator_data import parse_authenticator_data",
        "from .parse_backup_flags import parse_backup_flags",
        "from .parse_cbor import parse_cbor",
        "from .parse_client_data_json import parse_client_data_json",
        "from .parse_registration_credential_json import parse_registration_credential_json",
        "from .parse_registration_options_json import parse_registration_options_json",
        "from .validate_certificate_chain import validate_certificate_chain",
        "from .verify_safetynet_timestamp import verify_safetynet_timestamp",
        "from .verify_signature import verify_signature",
        "__all__ = ["
      ],
      "estimated_loc_savings": 20,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/registration/formats/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/helpers/asn1/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/webauthn/helpers/tpm/__init__.py",
      "current_size_lines": 4,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .map_tpm_manufacturer import map_tpm_manufacturer_id",
        "from .parse_cert_info import parse_cert_info",
        "from .parse_pub_area import parse_pub_area",
        "__all__ = [\"map_tpm_manufacturer_id\", \"parse_cert_info\", \"parse_pub_area\"]"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/uvloop/includes/__init__.py",
      "current_size_lines": 22,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 17,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prometheus_client/openmetrics/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prometheus_client/bridge/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/prometheus_client/twisted/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from ._exposition import MetricsResource",
        "__all__ = ['MetricsResource']"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/rich_toolkit/utils/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/rich_toolkit/styles/__init__.py",
      "current_size_lines": 6,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .base import BaseStyle",
        "from .border import BorderedStyle",
        "from .fancy import FancyStyle",
        "from .minimal import MinimalStyle",
        "from .tagged import TaggedStyle",
        "__all__ = [\"BaseStyle\", \"BorderedStyle\", \"TaggedStyle\", \"FancyStyle\", \"MinimalStyle\"]"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/_utils/__init__.py",
      "current_size_lines": 57,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from ._sync import asyncify as asyncify",
        "from ._proxy import LazyProxy as LazyProxy",
        "from ._utils import (",
        "from ._typing import (",
        "from ._streams import consume_sync_iterator as consume_sync_iterator, consume_async_iterator as consume_async_iterator",
        "from ._transform import (",
        "from ._reflection import ("
      ],
      "estimated_loc_savings": 45,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/types/__init__.py",
      "current_size_lines": 133,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .model import Model as Model",
        "from .usage import Usage as Usage",
        "from .shared import (",
        "from .message import Message as Message",
        "from .beta_error import BetaError as BetaError",
        "from .completion import Completion as Completion",
        "from .model_info import ModelInfo as ModelInfo",
        "from .text_block import TextBlock as TextBlock",
        "from .text_delta import TextDelta as TextDelta",
        "from .tool_param import ToolParam as ToolParam",
        "from .model_param import ModelParam as ModelParam",
        "from .stop_reason import StopReason as StopReason",
        "from .content_block import ContentBlock as ContentBlock",
        "from .message_param import MessageParam as MessageParam",
        "from .text_citation import TextCitation as TextCitation",
        "from .beta_api_error import BetaAPIError as BetaAPIError",
        "from .cache_creation import CacheCreation as CacheCreation",
        "from .metadata_param import MetadataParam as MetadataParam",
        "from .thinking_block import ThinkingBlock as ThinkingBlock",
        "from .thinking_delta import ThinkingDelta as ThinkingDelta",
        "from .tool_use_block import ToolUseBlock as ToolUseBlock",
        "from .citations_delta import CitationsDelta as CitationsDelta",
        "from .signature_delta import SignatureDelta as SignatureDelta",
        "from .input_json_delta import InputJSONDelta as InputJSONDelta",
        "from .text_block_param import TextBlockParam as TextBlockParam",
        "from .tool_union_param import ToolUnionParam as ToolUnionParam",
        "from .image_block_param import ImageBlockParam as ImageBlockParam",
        "from .model_list_params import ModelListParams as ModelListParams",
        "from .server_tool_usage import ServerToolUsage as ServerToolUsage",
        "from .tool_choice_param import ToolChoiceParam as ToolChoiceParam",
        "from .beta_billing_error import BetaBillingError as BetaBillingError",
        "from .message_stop_event import MessageStopEvent as MessageStopEvent",
        "from .beta_error_response import BetaErrorResponse as BetaErrorResponse",
        "from .content_block_param import ContentBlockParam as ContentBlockParam",
        "from .message_delta_event import MessageDeltaEvent as MessageDeltaEvent",
        "from .message_delta_usage import MessageDeltaUsage as MessageDeltaUsage",
        "from .message_start_event import MessageStartEvent as MessageStartEvent",
        "from .text_citation_param import TextCitationParam as TextCitationParam",
        "from .anthropic_beta_param import AnthropicBetaParam as AnthropicBetaParam",
        "from .beta_not_found_error import BetaNotFoundError as BetaNotFoundError",
        "from .document_block_param import DocumentBlockParam as DocumentBlockParam",
        "from .message_stream_event import MessageStreamEvent as MessageStreamEvent",
        "from .message_tokens_count import MessageTokensCount as MessageTokensCount",
        "from .thinking_block_param import ThinkingBlockParam as ThinkingBlockParam",
        "from .tool_use_block_param import ToolUseBlockParam as ToolUseBlockParam",
        "from .url_pdf_source_param import URLPDFSourceParam as URLPDFSourceParam",
        "from .beta_overloaded_error import BetaOverloadedError as BetaOverloadedError",
        "from .beta_permission_error import BetaPermissionError as BetaPermissionError",
        "from .beta_rate_limit_error import BetaRateLimitError as BetaRateLimitError",
        "from .message_create_params import MessageCreateParams as MessageCreateParams",
        "from .server_tool_use_block import ServerToolUseBlock as ServerToolUseBlock",
        "from .thinking_config_param import ThinkingConfigParam as ThinkingConfigParam",
        "from .tool_choice_any_param import ToolChoiceAnyParam as ToolChoiceAnyParam",
        "from .citation_char_location import CitationCharLocation as CitationCharLocation",
        "from .citation_page_location import CitationPageLocation as CitationPageLocation",
        "from .citations_config_param import CitationsConfigParam as CitationsConfigParam",
        "from .raw_message_stop_event import RawMessageStopEvent as RawMessageStopEvent",
        "from .tool_choice_auto_param import ToolChoiceAutoParam as ToolChoiceAutoParam",
        "from .tool_choice_none_param import ToolChoiceNoneParam as ToolChoiceNoneParam",
        "from .tool_choice_tool_param import ToolChoiceToolParam as ToolChoiceToolParam",
        "from .url_image_source_param import URLImageSourceParam as URLImageSourceParam",
        "from .base64_pdf_source_param import Base64PDFSourceParam as Base64PDFSourceParam",
        "from .plain_text_source_param import PlainTextSourceParam as PlainTextSourceParam",
        "from .raw_content_block_delta import RawContentBlockDelta as RawContentBlockDelta",
        "from .raw_message_delta_event import RawMessageDeltaEvent as RawMessageDeltaEvent",
        "from .raw_message_start_event import RawMessageStartEvent as RawMessageStartEvent",
        "from .redacted_thinking_block import RedactedThinkingBlock as RedactedThinkingBlock",
        "from .tool_result_block_param import ToolResultBlockParam as ToolResultBlockParam",
        "from .web_search_result_block import WebSearchResultBlock as WebSearchResultBlock",
        "from .completion_create_params import CompletionCreateParams as CompletionCreateParams",
        "from .content_block_stop_event import ContentBlockStopEvent as ContentBlockStopEvent",
        "from .raw_message_stream_event import RawMessageStreamEvent as RawMessageStreamEvent",
        "from .tool_bash_20250124_param import ToolBash20250124Param as ToolBash20250124Param",
        "from .base64_image_source_param import Base64ImageSourceParam as Base64ImageSourceParam",
        "from .beta_authentication_error import BetaAuthenticationError as BetaAuthenticationError",
        "from .content_block_delta_event import ContentBlockDeltaEvent as ContentBlockDeltaEvent",
        "from .content_block_start_event import ContentBlockStartEvent as ContentBlockStartEvent",
        "from .search_result_block_param import SearchResultBlockParam as SearchResultBlockParam",
        "from .beta_gateway_timeout_error import BetaGatewayTimeoutError as BetaGatewayTimeoutError",
        "from .beta_invalid_request_error import BetaInvalidRequestError as BetaInvalidRequestError",
        "from .content_block_source_param import ContentBlockSourceParam as ContentBlockSourceParam",
        "from .message_count_tokens_params import MessageCountTokensParams as MessageCountTokensParams",
        "from .server_tool_use_block_param import ServerToolUseBlockParam as ServerToolUseBlockParam",
        "from .citation_char_location_param import CitationCharLocationParam as CitationCharLocationParam",
        "from .citation_page_location_param import CitationPageLocationParam as CitationPageLocationParam",
        "from .raw_content_block_stop_event import RawContentBlockStopEvent as RawContentBlockStopEvent",
        "from .web_search_tool_result_block import WebSearchToolResultBlock as WebSearchToolResultBlock",
        "from .web_search_tool_result_error import WebSearchToolResultError as WebSearchToolResultError",
        "from .cache_control_ephemeral_param import CacheControlEphemeralParam as CacheControlEphemeralParam",
        "from .raw_content_block_delta_event import RawContentBlockDeltaEvent as RawContentBlockDeltaEvent",
        "from .raw_content_block_start_event import RawContentBlockStartEvent as RawContentBlockStartEvent",
        "from .redacted_thinking_block_param import RedactedThinkingBlockParam as RedactedThinkingBlockParam",
        "from .thinking_config_enabled_param import ThinkingConfigEnabledParam as ThinkingConfigEnabledParam",
        "from .web_search_result_block_param import WebSearchResultBlockParam as WebSearchResultBlockParam",
        "from .thinking_config_disabled_param import ThinkingConfigDisabledParam as ThinkingConfigDisabledParam",
        "from .web_search_tool_20250305_param import WebSearchTool20250305Param as WebSearchTool20250305Param",
        "from .citation_content_block_location import CitationContentBlockLocation as CitationContentBlockLocation",
        "from .message_count_tokens_tool_param import MessageCountTokensToolParam as MessageCountTokensToolParam",
        "from .tool_text_editor_20250124_param import ToolTextEditor20250124Param as ToolTextEditor20250124Param",
        "from .tool_text_editor_20250429_param import ToolTextEditor20250429Param as ToolTextEditor20250429Param",
        "from .tool_text_editor_20250728_param import ToolTextEditor20250728Param as ToolTextEditor20250728Param",
        "from .citations_search_result_location import CitationsSearchResultLocation as CitationsSearchResultLocation",
        "from .content_block_source_content_param import ContentBlockSourceContentParam as ContentBlockSourceContentParam",
        "from .web_search_tool_result_block_param import WebSearchToolResultBlockParam as WebSearchToolResultBlockParam",
        "from .web_search_tool_request_error_param import WebSearchToolRequestErrorParam as WebSearchToolRequestErrorParam",
        "from .citations_web_search_result_location import CitationsWebSearchResultLocation as CitationsWebSearchResultLocation",
        "from .web_search_tool_result_block_content import WebSearchToolResultBlockContent as WebSearchToolResultBlockContent",
        "from .citation_content_block_location_param import (",
        "from .citation_search_result_location_param import (",
        "from .citation_web_search_result_location_param import (",
        "from .web_search_tool_result_block_param_content_param import ("
      ],
      "estimated_loc_savings": 17,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/resources/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .models import (",
        "from .messages import (",
        "from .completions import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/lib/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/types/beta/__init__.py",
      "current_size_lines": 161,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .beta_usage import BetaUsage as BetaUsage",
        "from .beta_message import BetaMessage as BetaMessage",
        "from .deleted_file import DeletedFile as DeletedFile",
        "from .file_metadata import FileMetadata as FileMetadata",
        "from .beta_container import BetaContainer as BetaContainer",
        "from .beta_model_info import BetaModelInfo as BetaModelInfo",
        "from .beta_text_block import BetaTextBlock as BetaTextBlock",
        "from .beta_text_delta import BetaTextDelta as BetaTextDelta",
        "from .beta_tool_param import BetaToolParam as BetaToolParam",
        "from .beta_stop_reason import BetaStopReason as BetaStopReason",
        "from .file_list_params import FileListParams as FileListParams",
        "from .model_list_params import ModelListParams as ModelListParams",
        "from .beta_content_block import BetaContentBlock as BetaContentBlock",
        "from .beta_message_param import BetaMessageParam as BetaMessageParam",
        "from .beta_text_citation import BetaTextCitation as BetaTextCitation",
        "from .file_upload_params import FileUploadParams as FileUploadParams",
        "from .beta_cache_creation import BetaCacheCreation as BetaCacheCreation",
        "from .beta_metadata_param import BetaMetadataParam as BetaMetadataParam",
        "from .beta_thinking_block import BetaThinkingBlock as BetaThinkingBlock",
        "from .beta_thinking_delta import BetaThinkingDelta as BetaThinkingDelta",
        "from .beta_tool_use_block import BetaToolUseBlock as BetaToolUseBlock",
        "from .beta_citations_delta import BetaCitationsDelta as BetaCitationsDelta",
        "from .beta_signature_delta import BetaSignatureDelta as BetaSignatureDelta",
        "from .beta_input_json_delta import BetaInputJSONDelta as BetaInputJSONDelta",
        "from .beta_text_block_param import BetaTextBlockParam as BetaTextBlockParam",
        "from .beta_tool_union_param import BetaToolUnionParam as BetaToolUnionParam",
        "from .message_create_params import MessageCreateParams as MessageCreateParams",
        "from .beta_image_block_param import BetaImageBlockParam as BetaImageBlockParam",
        "from .beta_server_tool_usage import BetaServerToolUsage as BetaServerToolUsage",
        "from .beta_tool_choice_param import BetaToolChoiceParam as BetaToolChoiceParam",
        "from .beta_mcp_tool_use_block import BetaMCPToolUseBlock as BetaMCPToolUseBlock",
        "from .beta_content_block_param import BetaContentBlockParam as BetaContentBlockParam",
        "from .beta_message_delta_usage import BetaMessageDeltaUsage as BetaMessageDeltaUsage",
        "from .beta_text_citation_param import BetaTextCitationParam as BetaTextCitationParam",
        "from .beta_message_tokens_count import BetaMessageTokensCount as BetaMessageTokensCount",
        "from .beta_thinking_block_param import BetaThinkingBlockParam as BetaThinkingBlockParam",
        "from .beta_tool_use_block_param import BetaToolUseBlockParam as BetaToolUseBlockParam",
        "from .beta_url_pdf_source_param import BetaURLPDFSourceParam as BetaURLPDFSourceParam",
        "from .beta_mcp_tool_result_block import BetaMCPToolResultBlock as BetaMCPToolResultBlock",
        "from .beta_server_tool_use_block import BetaServerToolUseBlock as BetaServerToolUseBlock",
        "from .beta_thinking_config_param import BetaThinkingConfigParam as BetaThinkingConfigParam",
        "from .beta_tool_choice_any_param import BetaToolChoiceAnyParam as BetaToolChoiceAnyParam",
        "from .beta_base64_pdf_block_param import BetaBase64PDFBlockParam as BetaBase64PDFBlockParam",
        "from .beta_citation_char_location import BetaCitationCharLocation as BetaCitationCharLocation",
        "from .beta_citation_page_location import BetaCitationPageLocation as BetaCitationPageLocation",
        "from .beta_citations_config_param import BetaCitationsConfigParam as BetaCitationsConfigParam",
        "from .beta_container_upload_block import BetaContainerUploadBlock as BetaContainerUploadBlock",
        "from .beta_raw_message_stop_event import BetaRawMessageStopEvent as BetaRawMessageStopEvent",
        "from .beta_tool_choice_auto_param import BetaToolChoiceAutoParam as BetaToolChoiceAutoParam",
        "from .beta_tool_choice_none_param import BetaToolChoiceNoneParam as BetaToolChoiceNoneParam",
        "from .beta_tool_choice_tool_param import BetaToolChoiceToolParam as BetaToolChoiceToolParam",
        "from .beta_url_image_source_param import BetaURLImageSourceParam as BetaURLImageSourceParam",
        "from .message_count_tokens_params import MessageCountTokensParams as MessageCountTokensParams",
        "from .beta_base64_pdf_source_param import BetaBase64PDFSourceParam as BetaBase64PDFSourceParam",
        "from .beta_file_image_source_param import BetaFileImageSourceParam as BetaFileImageSourceParam",
        "from .beta_plain_text_source_param import BetaPlainTextSourceParam as BetaPlainTextSourceParam",
        "from .beta_raw_content_block_delta import BetaRawContentBlockDelta as BetaRawContentBlockDelta",
        "from .beta_raw_message_delta_event import BetaRawMessageDeltaEvent as BetaRawMessageDeltaEvent",
        "from .beta_raw_message_start_event import BetaRawMessageStartEvent as BetaRawMessageStartEvent",
        "from .beta_redacted_thinking_block import BetaRedactedThinkingBlock as BetaRedactedThinkingBlock",
        "from .beta_tool_result_block_param import BetaToolResultBlockParam as BetaToolResultBlockParam",
        "from .beta_web_search_result_block import BetaWebSearchResultBlock as BetaWebSearchResultBlock",
        "from .beta_mcp_tool_use_block_param import BetaMCPToolUseBlockParam as BetaMCPToolUseBlockParam",
        "from .beta_raw_message_stream_event import BetaRawMessageStreamEvent as BetaRawMessageStreamEvent",
        "from .beta_tool_bash_20241022_param import BetaToolBash20241022Param as BetaToolBash20241022Param",
        "from .beta_tool_bash_20250124_param import BetaToolBash20250124Param as BetaToolBash20250124Param",
        "from .beta_base64_image_source_param import BetaBase64ImageSourceParam as BetaBase64ImageSourceParam",
        "from .beta_search_result_block_param import BetaSearchResultBlockParam as BetaSearchResultBlockParam",
        "from .beta_content_block_source_param import BetaContentBlockSourceParam as BetaContentBlockSourceParam",
        "from .beta_file_document_source_param import BetaFileDocumentSourceParam as BetaFileDocumentSourceParam",
        "from .beta_code_execution_output_block import BetaCodeExecutionOutputBlock as BetaCodeExecutionOutputBlock",
        "from .beta_code_execution_result_block import BetaCodeExecutionResultBlock as BetaCodeExecutionResultBlock",
        "from .beta_server_tool_use_block_param import BetaServerToolUseBlockParam as BetaServerToolUseBlockParam",
        "from .beta_citation_char_location_param import BetaCitationCharLocationParam as BetaCitationCharLocationParam",
        "from .beta_citation_page_location_param import BetaCitationPageLocationParam as BetaCitationPageLocationParam",
        "from .beta_container_upload_block_param import BetaContainerUploadBlockParam as BetaContainerUploadBlockParam",
        "from .beta_raw_content_block_stop_event import BetaRawContentBlockStopEvent as BetaRawContentBlockStopEvent",
        "from .beta_request_document_block_param import BetaRequestDocumentBlockParam as BetaRequestDocumentBlockParam",
        "from .beta_web_search_tool_result_block import BetaWebSearchToolResultBlock as BetaWebSearchToolResultBlock",
        "from .beta_web_search_tool_result_error import BetaWebSearchToolResultError as BetaWebSearchToolResultError",
        "from .beta_cache_control_ephemeral_param import BetaCacheControlEphemeralParam as BetaCacheControlEphemeralParam",
        "from .beta_raw_content_block_delta_event import BetaRawContentBlockDeltaEvent as BetaRawContentBlockDeltaEvent",
        "from .beta_raw_content_block_start_event import BetaRawContentBlockStartEvent as BetaRawContentBlockStartEvent",
        "from .beta_redacted_thinking_block_param import BetaRedactedThinkingBlockParam as BetaRedactedThinkingBlockParam",
        "from .beta_thinking_config_enabled_param import BetaThinkingConfigEnabledParam as BetaThinkingConfigEnabledParam",
        "from .beta_web_search_result_block_param import BetaWebSearchResultBlockParam as BetaWebSearchResultBlockParam",
        "from .beta_thinking_config_disabled_param import BetaThinkingConfigDisabledParam as BetaThinkingConfigDisabledParam",
        "from .beta_web_search_tool_20250305_param import BetaWebSearchTool20250305Param as BetaWebSearchTool20250305Param",
        "from .beta_citation_content_block_location import BetaCitationContentBlockLocation as BetaCitationContentBlockLocation",
        "from .beta_citation_search_result_location import BetaCitationSearchResultLocation as BetaCitationSearchResultLocation",
        "from .beta_tool_text_editor_20241022_param import BetaToolTextEditor20241022Param as BetaToolTextEditor20241022Param",
        "from .beta_tool_text_editor_20250124_param import BetaToolTextEditor20250124Param as BetaToolTextEditor20250124Param",
        "from .beta_tool_text_editor_20250429_param import BetaToolTextEditor20250429Param as BetaToolTextEditor20250429Param",
        "from .beta_tool_text_editor_20250728_param import BetaToolTextEditor20250728Param as BetaToolTextEditor20250728Param",
        "from .beta_code_execution_tool_result_block import BetaCodeExecutionToolResultBlock as BetaCodeExecutionToolResultBlock",
        "from .beta_code_execution_tool_result_error import BetaCodeExecutionToolResultError as BetaCodeExecutionToolResultError",
        "from .beta_tool_computer_use_20241022_param import BetaToolComputerUse20241022Param as BetaToolComputerUse20241022Param",
        "from .beta_tool_computer_use_20250124_param import BetaToolComputerUse20250124Param as BetaToolComputerUse20250124Param",
        "from .beta_code_execution_output_block_param import (",
        "from .beta_code_execution_result_block_param import (",
        "from .beta_web_search_tool_result_error_code import BetaWebSearchToolResultErrorCode as BetaWebSearchToolResultErrorCode",
        "from .beta_code_execution_tool_20250522_param import (",
        "from .beta_content_block_source_content_param import (",
        "from .beta_web_search_tool_result_block_param import (",
        "from .beta_request_mcp_tool_result_block_param import (",
        "from .beta_web_search_tool_request_error_param import (",
        "from .beta_citations_web_search_result_location import (",
        "from .beta_web_search_tool_result_block_content import (",
        "from .beta_citation_content_block_location_param import (",
        "from .beta_citation_search_result_location_param import (",
        "from .beta_code_execution_tool_result_error_code import (",
        "from .beta_code_execution_tool_result_block_param import (",
        "from .beta_code_execution_tool_result_error_param import (",
        "from .beta_request_mcp_server_url_definition_param import (",
        "from .beta_code_execution_tool_result_block_content import (",
        "from .beta_citation_web_search_result_location_param import (",
        "from .beta_request_mcp_server_tool_configuration_param import (",
        "from .beta_web_search_tool_result_block_param_content_param import (",
        "from .beta_code_execution_tool_result_block_param_content_param import ("
      ],
      "estimated_loc_savings": 37,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/types/messages/__init__.py",
      "current_size_lines": 13,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .message_batch import MessageBatch as MessageBatch",
        "from .batch_list_params import BatchListParams as BatchListParams",
        "from .batch_create_params import BatchCreateParams as BatchCreateParams",
        "from .message_batch_result import MessageBatchResult as MessageBatchResult",
        "from .deleted_message_batch import DeletedMessageBatch as DeletedMessageBatch",
        "from .message_batch_errored_result import MessageBatchErroredResult as MessageBatchErroredResult",
        "from .message_batch_expired_result import MessageBatchExpiredResult as MessageBatchExpiredResult",
        "from .message_batch_request_counts import MessageBatchRequestCounts as MessageBatchRequestCounts",
        "from .message_batch_canceled_result import MessageBatchCanceledResult as MessageBatchCanceledResult",
        "from .message_batch_succeeded_result import MessageBatchSucceededResult as MessageBatchSucceededResult",
        "from .message_batch_individual_response import MessageBatchIndividualResponse as MessageBatchIndividualResponse"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/types/shared/__init__.py",
      "current_size_lines": 12,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .error_object import ErrorObject as ErrorObject",
        "from .billing_error import BillingError as BillingError",
        "from .error_response import ErrorResponse as ErrorResponse",
        "from .not_found_error import NotFoundError as NotFoundError",
        "from .api_error_object import APIErrorObject as APIErrorObject",
        "from .overloaded_error import OverloadedError as OverloadedError",
        "from .permission_error import PermissionError as PermissionError",
        "from .rate_limit_error import RateLimitError as RateLimitError",
        "from .authentication_error import AuthenticationError as AuthenticationError",
        "from .gateway_timeout_error import GatewayTimeoutError as GatewayTimeoutError",
        "from .invalid_request_error import InvalidRequestError as InvalidRequestError"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/types/beta/messages/__init__.py",
      "current_size_lines": 15,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from .batch_list_params import BatchListParams as BatchListParams",
        "from .beta_message_batch import BetaMessageBatch as BetaMessageBatch",
        "from .batch_create_params import BatchCreateParams as BatchCreateParams",
        "from .beta_message_batch_result import BetaMessageBatchResult as BetaMessageBatchResult",
        "from .beta_deleted_message_batch import BetaDeletedMessageBatch as BetaDeletedMessageBatch",
        "from .beta_message_batch_errored_result import BetaMessageBatchErroredResult as BetaMessageBatchErroredResult",
        "from .beta_message_batch_expired_result import BetaMessageBatchExpiredResult as BetaMessageBatchExpiredResult",
        "from .beta_message_batch_request_counts import BetaMessageBatchRequestCounts as BetaMessageBatchRequestCounts",
        "from .beta_message_batch_canceled_result import BetaMessageBatchCanceledResult as BetaMessageBatchCanceledResult",
        "from .beta_message_batch_succeeded_result import BetaMessageBatchSucceededResult as BetaMessageBatchSucceededResult",
        "from .beta_message_batch_individual_response import ("
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/resources/beta/__init__.py",
      "current_size_lines": 59,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .beta import (",
        "from .files import (",
        "from .models import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 49,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/resources/messages/__init__.py",
      "current_size_lines": 33,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .batches import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 25,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/.venv/lib/python3.13/site-packages/anthropic/resources/beta/messages/__init__.py",
      "current_size_lines": 31,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .batches import (",
        "from .messages import (",
        "__all__ = ["
      ],
      "estimated_loc_savings": 23,
      "requires_standardization": true
    }
  ],
  "estimated_loc_savings": 1528,
  "file_count": 50
}