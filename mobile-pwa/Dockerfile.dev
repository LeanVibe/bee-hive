# LeanVibe Mobile PWA - Development Dockerfile
# Optimized for hot-reloading and development workflow

FROM node:20-alpine as base

# Install system dependencies for better performance
RUN apk add --no-cache \
    git \
    curl \
    tzdata

# Set working directory
WORKDIR /app

# Configure npm for better caching and performance
RUN npm config set registry https://registry.npmjs.org/ && \
    npm config set cache /root/.npm && \
    npm config set prefer-offline true && \
    npm config set progress false

# Development stage
FROM base as development

# Install development tools
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    bash

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S vite -u 1001

# Copy package files first for better Docker layer caching
COPY package*.json ./
COPY package-lock.json* ./

# Install dependencies with full dev setup
RUN npm ci --include=dev --silent

# Copy source code with proper ownership
COPY --chown=vite:nodejs . .

# Switch to non-root user
USER vite

# Expose ports for development server and HMR
EXPOSE 3000 24678

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Development command with hot module replacement
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]

# Production build stage (for multi-stage builds)
FROM base as build

COPY package*.json ./
RUN npm ci --only=production --silent

COPY . .
RUN npm run build

FROM nginx:alpine as production

# Copy built assets
COPY --from=build /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]