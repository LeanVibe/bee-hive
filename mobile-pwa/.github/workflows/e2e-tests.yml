name: E2E Tests - LeanVibe Agent Hive 2.0

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'smoke'
        type: choice
        options:
          - smoke
          - full
          - performance
          - accessibility
          - mobile
          - pwa

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'
  TEST_BASE_URL: 'http://localhost:5173'
  TEST_BACKEND_URL: 'http://localhost:8000'

jobs:
  # Quick smoke tests for PRs
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && inputs.test_suite == 'smoke')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Install dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: mobile-pwa
        run: npm run build
        
      - name: Run smoke tests
        working-directory: mobile-pwa
        run: npx playwright test --project=smoke --reporter=github
        env:
          CI: true
          
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-artifacts
          path: |
            mobile-pwa/test-results/
            mobile-pwa/playwright-report/
          retention-days: 7

  # Comprehensive E2E tests for main branch and nightly
  full-e2e-tests:
    name: Full E2E Test Suite
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.test_suite == 'full')
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install uvicorn
          
      - name: Install Node dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps
        
      - name: Start backend server
        run: |
          python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 10
          curl -f http://localhost:8000/health || exit 1
        env:
          TEST_MODE: true
          
      - name: Build and start frontend
        working-directory: mobile-pwa
        run: |
          npm run build
          npm run preview &
          sleep 5
          curl -f http://localhost:5173 || exit 1
          
      - name: Run E2E tests
        working-directory: mobile-pwa
        run: npx playwright test --project=${{ matrix.project }} --reporter=html,github
        env:
          CI: true
          TEST_WITH_BACKEND: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results-${{ matrix.project }}
          path: |
            mobile-pwa/test-results/
            mobile-pwa/playwright-report/
          retention-days: 14

  # Mobile-specific testing
  mobile-tests:
    name: Mobile & PWA Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.test_suite == 'mobile')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Install dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: mobile-pwa
        run: npm run build
        
      - name: Run mobile tests
        working-directory: mobile-pwa
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari" --project="iPad" --reporter=github
        env:
          CI: true
          
      - name: Upload mobile test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-test-artifacts
          path: |
            mobile-pwa/test-results/
            mobile-pwa/playwright-report/
          retention-days: 14

  # Performance testing
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.test_suite == 'performance')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Install dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps chromium
        
      - name: Build optimized frontend
        working-directory: mobile-pwa
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Run performance tests
        working-directory: mobile-pwa
        run: npx playwright test --project=performance --reporter=github
        env:
          CI: true
          
      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: |
            mobile-pwa/test-results/
            mobile-pwa/playwright-report/
          retention-days: 30

  # Accessibility testing
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.test_suite == 'accessibility')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Install dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: mobile-pwa
        run: npm run build
        
      - name: Run accessibility tests
        working-directory: mobile-pwa
        run: npx playwright test --project=accessibility --reporter=github
        env:
          CI: true
          
      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-test-results
          path: |
            mobile-pwa/test-results/
            mobile-pwa/playwright-report/
          retention-days: 30

  # Visual regression testing
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-pwa/package-lock.json
          
      - name: Install dependencies
        working-directory: mobile-pwa
        run: npm ci
        
      - name: Install Playwright
        working-directory: mobile-pwa
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: mobile-pwa
        run: npm run build
        
      - name: Run visual regression tests
        working-directory: mobile-pwa
        run: npx playwright test --project=visual-regression --reporter=github
        env:
          CI: true
          
      - name: Upload visual diff artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diffs
          path: |
            mobile-pwa/test-results/
            mobile-pwa/tests/e2e/visual/visual-regression.spec.ts-snapshots/
          retention-days: 30

  # Test result aggregation and reporting
  test-report:
    name: Aggregate Test Results
    runs-on: ubuntu-latest
    needs: [smoke-tests, full-e2e-tests, mobile-tests, performance-tests, accessibility-tests, visual-regression]
    if: always() && (github.event_name == 'schedule' || github.ref == 'refs/heads/main')
    
    steps:
      - name: Download all test artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts/
          
      - name: Generate test summary
        run: |
          echo "# E2E Test Results Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Execution Overview" >> test-summary.md
          echo "- **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> test-summary.md
          echo "- **Commit**: ${{ github.sha }}" >> test-summary.md
          echo "- **Branch**: ${{ github.ref_name }}" >> test-summary.md
          echo "" >> test-summary.md
          
          echo "## Job Results" >> test-summary.md
          echo "| Job | Status | Artifacts |" >> test-summary.md
          echo "|-----|--------|-----------|" >> test-summary.md
          
          # Check each job result
          jobs=("smoke-tests" "full-e2e-tests" "mobile-tests" "performance-tests" "accessibility-tests" "visual-regression")
          for job in "${jobs[@]}"; do
            if [[ "${{ needs.$job.result }}" == "success" ]]; then
              status="✅ Passed"
            elif [[ "${{ needs.$job.result }}" == "failure" ]]; then
              status="❌ Failed"
            elif [[ "${{ needs.$job.result }}" == "skipped" ]]; then
              status="⏭️ Skipped"
            else
              status="⚠️ ${{ needs.$job.result }}"
            fi
            echo "| $job | $status | Available |" >> test-summary.md
          done
          
          echo "" >> test-summary.md
          echo "## Quick Links" >> test-summary.md
          echo "- [Full Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> test-summary.md
          echo "- [Test Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)" >> test-summary.md
          
      - name: Upload test summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
          retention-days: 90

  # Cleanup old test artifacts
  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 10