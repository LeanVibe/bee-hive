version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: enterprise_demo_postgres
    environment:
      POSTGRES_DB: enterprise_demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-enterprise_demo_2025}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - enterprise_demo_data:/var/lib/postgresql/data
      - ./sql/init_demo.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo_user -d enterprise_demo"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - enterprise_demo

  redis:
    image: redis:7-alpine
    container_name: enterprise_demo_redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - enterprise_demo_redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - enterprise_demo

  demo_orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: enterprise_demo_orchestrator
    environment:
      # Core configuration
      - ENVIRONMENT=enterprise_demo
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      
      # Database configuration
      - DATABASE_URL=postgresql://demo_user:${POSTGRES_PASSWORD:-enterprise_demo_2025}@postgres:5432/enterprise_demo
      - DATABASE_ECHO=false
      
      # Redis configuration
      - REDIS_URL=redis://redis:6379/0
      - REDIS_STREAM_MAXLEN=1000
      
      # AI configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - AI_MODEL=claude-3-5-sonnet-20241022
      - MAX_CONCURRENT_AGENTS=25
      
      # Demo configuration
      - DEMO_MODE=enterprise
      - DEMO_SUCCESS_RATE_TARGET=100
      - ENTERPRISE_FEATURES_ENABLED=true
      
      # Security configuration
      - SECRET_KEY=${SECRET_KEY:-enterprise_demo_secret_key_2025}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRE_MINUTES=60
      
      # Monitoring configuration
      - LOG_LEVEL=INFO
      - STRUCTURED_LOGGING=true
      - METRICS_ENABLED=true
      
      # Enterprise demo specific
      - DEMO_SCENARIOS_PATH=/app/demos/scenarios
      - DEMO_WORKSPACE_PATH=/app/demos/workspace
      - AUDIT_TRAIL_ENABLED=true
    ports:
      - "8000:8000"
      - "8001:8001"  # Metrics endpoint
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./demos:/app/demos
      - ./logs:/app/logs
      - ./enterprise_demo_workspace:/app/workspace
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - enterprise_demo

  demo_monitoring:
    image: prom/prometheus:latest
    container_name: enterprise_demo_monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - enterprise_demo

  demo_dashboard:
    image: grafana/grafana:latest
    container_name: enterprise_demo_dashboard
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-demo_admin_2025}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000/
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    depends_on:
      - demo_monitoring
    networks:
      - enterprise_demo

volumes:
  enterprise_demo_data:
    driver: local
  enterprise_demo_redis:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  enterprise_demo:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16