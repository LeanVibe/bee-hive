# LeanVibe Agent Hive - Docker Development Configuration
# Copy this file to .env.docker and update with your values
# This file contains Docker-specific environment variables and optimizations

# ======================
# APPLICATION SETTINGS
# ======================
APP_NAME="LeanVibe Agent Hive"
APP_VERSION="2.0.0"
DEBUG=true
LOG_LEVEL=INFO
ENVIRONMENT=development

# Build Arguments (for docker-compose)
PYTHON_VERSION=3.12
BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
VCS_REF=$(git rev-parse --short HEAD)

# ======================
# SERVICE PORT CONFIGURATION
# ======================
# Main application ports
MAIN_API_PORT=8100
API_DEBUG_PORT=5678
DASHBOARD_PORT=3001
FRONTEND_HMR_PORT=24678

# Database ports
POSTGRES_PORT=5433

# Cache and message broker ports  
REDIS_PORT=6380

# Management tool ports
PGADMIN_PORT=5150
ADMINER_PORT=8203
REDIS_COMMANDER_PORT=8201
REDIS_INSIGHT_PORT=8202

# Monitoring ports
PROMETHEUS_PORT=9090
GRAFANA_PORT=3101
ALERTMANAGER_PORT=9093

# Observability ports
POSTGRES_EXPORTER_PORT=9187
REDIS_EXPORTER_PORT=9121
CADVISOR_PORT=8180
NODE_EXPORTER_PORT=9100

# Logging ports
ELASTICSEARCH_PORT=9200
LOGSTASH_BEATS_PORT=5044
LOGSTASH_TCP_PORT=5000
LOGSTASH_API_PORT=9600
KIBANA_PORT=5601

# Development tools
JUPYTER_PORT=8888

# ======================
# DATABASE CONFIGURATION
# ======================
# PostgreSQL with pgvector extension
POSTGRES_DB=leanvibe_agent_hive
POSTGRES_USER=leanvibe_user
POSTGRES_PASSWORD=leanvibe_secure_pass_docker_dev
# Connection URL for applications
DATABASE_URL=postgresql+asyncpg://leanvibe_user:leanvibe_secure_pass_docker_dev@postgres:5432/leanvibe_agent_hive
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# ======================
# REDIS CONFIGURATION  
# ======================
# Redis for message bus and caching
REDIS_PASSWORD=leanvibe_redis_pass_docker
REDIS_URL=redis://:leanvibe_redis_pass_docker@redis:6379/0
REDIS_STREAM_MAX_LEN=10000

# ======================
# SECURITY CONFIGURATION
# ======================
# JWT Configuration - Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
JWT_SECRET_KEY=CHANGE_THIS_TO_SECURE_RANDOM_KEY_MINIMUM_64_CHARS_DOCKER_DEV
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Application secret key
SECRET_KEY=leanvibe_super_secret_key_docker_development_only

# CORS Configuration for Docker development
CORS_ORIGINS=http://localhost:3001,http://localhost:8100,http://localhost:3000
ALLOWED_HOSTS=localhost,127.0.0.1,api,frontend

# Security settings
BCRYPT_ROUNDS=12
SESSION_COOKIE_SECURE=false
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# ======================
# AI SERVICE CONFIGURATION
# ======================
# Anthropic Claude API - Add your actual key here
ANTHROPIC_API_KEY=your-anthropic-api-key-here
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# ======================
# WEBSOCKET CONFIGURATION
# ======================
# WebSocket authentication (relaxed for development)
WS_AUTH_REQUIRED=false
WS_AUTH_MODE=token
WS_AUTH_TOKEN=dev-token-change-me-docker
WS_ALLOWED_ORIGINS=

# WebSocket performance settings
WS_RATE_TOKENS_PER_SEC=20
WS_RATE_BURST=40
WS_COMPRESSION_ENABLED=false

# ======================
# DEVELOPMENT FEATURES
# ======================
# Hot reloading and development optimizations
ENABLE_HOT_RELOAD=true
ENABLE_DEBUG_TOOLBAR=true
SKIP_STARTUP_INIT=false
ENABLE_MOCK_DATA=false

# ======================
# FRONTEND CONFIGURATION
# ======================
# Vite development server configuration
VITE_API_BASE_URL=http://localhost:8100
VITE_WS_URL=ws://localhost:8100/api/dashboard/ws/dashboard
VITE_APP_TITLE=LeanVibe Agent Hive - Docker Dev
VITE_APP_VERSION=2.0.0
VITE_ENABLE_MOCK_DATA=false
VITE_ENABLE_DEBUG=true
VITE_AUTH_REQUIRED=false
VITE_AUTH_TOKEN=dev-token-change-me-docker

# ======================
# MONITORING & OBSERVABILITY
# ======================
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
PERFORMANCE_MONITORING_ENABLED=true

# Grafana configuration
GRAFANA_PASSWORD=admin_password_docker

# ======================
# DATABASE MANAGEMENT TOOLS
# ======================
# pgAdmin configuration
PGADMIN_EMAIL=admin@leanvibe.dev
PGADMIN_PASSWORD=admin_password_docker

# Redis Commander configuration
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=admin_docker

# ======================
# FEATURE FLAGS
# ======================
ENABLE_WEBAUTHN=true
ENABLE_PUSH_NOTIFICATIONS=true
ENABLE_GITHUB_INTEGRATION=true
ENABLE_OFFLINE_MODE=true
ENABLE_ENTERPRISE_TEMPLATES=false

# ======================
# TESTING CONFIGURATION
# ======================
# Testing environment settings
PYTEST_WORKERS=4

# ======================
# DEVELOPMENT TOOLS
# ======================
# Jupyter notebook
JUPYTER_TOKEN=leanvibe_jupyter_token_docker

# ======================
# DOCKER OPTIMIZATION
# ======================
# Docker-specific optimizations
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# Container resource limits (for docker-compose)
API_MEMORY_LIMIT=2G
API_CPU_LIMIT=2.0
POSTGRES_MEMORY_LIMIT=512M
REDIS_MEMORY_LIMIT=256M
FRONTEND_MEMORY_LIMIT=1G

# ======================
# LOGGING CONFIGURATION
# ======================
# Structured logging for Docker
LOG_FORMAT=json
LOG_OUTPUT=stdout

# ======================
# EXPERIMENTAL FEATURES
# ======================
# Enable experimental Docker features
COMPOSE_EXPERIMENTAL=true

# Use BuildKit for faster builds
DOCKER_BUILDKIT=1
BUILDX_NO_DEFAULT_ATTESTATIONS=1

# ======================
# GITHUB INTEGRATION (Optional)
# ======================
# GitHub API for repository management (if needed)
# GITHUB_APP_ID=your-github-app-id
# GITHUB_PRIVATE_KEY=your-github-private-key
# GITHUB_WEBHOOK_SECRET=your-github-webhook-secret

# ======================
# FIREBASE CONFIGURATION (Optional)
# ======================
# Firebase Cloud Messaging for push notifications (if needed)
# FIREBASE_PROJECT_ID=your-firebase-project-id
# FIREBASE_PRIVATE_KEY_ID=your-firebase-private-key-id  
# FIREBASE_PRIVATE_KEY=your-firebase-private-key
# FIREBASE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
# FIREBASE_VAPID_KEY=your-firebase-vapid-key

# ======================
# NOTES FOR DEVELOPERS
# ======================
# 1. This file is optimized for Docker development workflow
# 2. Passwords are set to development-friendly values - change for production!
# 3. All services are accessible on localhost with the ports above
# 4. Use `docker-compose --profile development up` for full dev stack
# 5. Use `docker-compose up postgres redis api` for minimal setup
# 6. Hot reloading is enabled for both backend and frontend
# 7. All data persists in Docker volumes for development continuity