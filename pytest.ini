[pytest]
testpaths =
    tests/contracts
    tests/ws
    tests/smoke
    tests/consolidation
    tests/quality_gates
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --asyncio-mode=auto
    --cov=app.api.dashboard_compat
    --cov=app.main
    --cov=app.core.config
    --cov=app.core.database
    --cov=app.core.redis
    --cov=app.core.workspace_manager
    --cov=app.models.agent
    --cov=app.models.task
    --cov=app.cli
    --cov=app.models.project_index
    --cov=app.schemas.project_index
    --cov=app.api.project_index
    --cov=app.api.project_index_websocket
    --cov=app.api.project_index_optimization
    --cov=app.project_index
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=90
markers = 
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests (may take >10 seconds)
    redis: Tests that require Redis
    postgres: Tests that require PostgreSQL
    anthropic: Tests that require Anthropic API
    github: Tests for GitHub integration features
    performance: Performance and load tests
    stress: Stress and high-load tests
    load: Load testing and capacity tests
    error_handling: Error handling and resilience tests
    security: Security and authentication tests
    e2e: End-to-end tests
    chaos: Chaos engineering tests
    contracts: Contract and interface validation tests
    contract: Single contract validation tests
    isolation: Tests that run components in complete isolation
    error_scenarios: Tests for error handling and edge cases
    context_management: Tests for semantic memory and context management features
    database: Database-related tests
    validation: Input validation and sanitization tests
    concurrent: Concurrent execution tests
    recovery: System recovery and state management tests
    asyncio: Asynchronous test execution
    benchmark: Performance benchmarking tests
    ci_performance: Continuous integration performance tests
    parametrize: Parameterized test cases
    timeout: Tests with execution timeout constraints
    cli_units: CLI unit tests for command parsing and logic
    cli_integration: CLI integration tests with mocked API
    cli_e2e: CLI end-to-end tests with running API
    cli_workflows: CLI workflow and usability tests
    cli_performance: CLI performance and error handling tests
    project_index: Project Index system tests
    project_index_unit: Project Index unit tests
    project_index_integration: Project Index integration tests
    project_index_performance: Project Index performance tests
    project_index_security: Project Index security tests
    project_index_api: Project Index API tests
    project_index_websocket: Project Index WebSocket tests
    project_index_models: Project Index database model tests
    large_project: Tests with large project scenarios
    file_monitoring: File system monitoring tests
    dependency_analysis: Dependency graph analysis tests
    context_optimization: Context optimization tests
    project_index_frontend: Project Index frontend and PWA tests
    frontend: Frontend component and UI tests
    pwa: Progressive Web App functionality tests
    responsive: Responsive design and mobile compatibility tests
    websocket_contract: WebSocket message contract tests
    consolidation: Epic 1-4 consolidation testing framework
    consolidation_safety: Tests that ensure safe file consolidation
    api_preservation: Tests that verify API compatibility during consolidation
    performance_regression: Tests that detect performance regressions
    quality_gates: Quality gate validation tests
    pre_consolidation: Pre-consolidation readiness tests
    post_consolidation: Post-consolidation validation tests
    baseline_establishment: Performance baseline establishment tests
    functionality_preservation: Tests that verify functionality is preserved
    module_compatibility: Module compatibility validation tests
    
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*coroutine.*was never awaited.*:RuntimeWarning

asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test collection patterns
minversion = 6.0

; Removed custom, unsupported ini options for focused runs