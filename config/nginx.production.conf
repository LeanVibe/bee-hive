# Nginx Configuration for LeanVibe Agent Hive Production
# High-performance reverse proxy with SSL, load balancing, and security

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Performance optimizations
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging format for production
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json_analytics escape=json
                    '{'
                    '"time_local":"$time_local",'
                    '"remote_addr":"$remote_addr",'
                    '"remote_user":"$remote_user",'
                    '"request":"$request",'
                    '"status": "$status",'
                    '"body_bytes_sent":"$body_bytes_sent",'
                    '"request_time":"$request_time",'
                    '"http_referrer":"$http_referer",'
                    '"http_user_agent":"$http_user_agent",'
                    '"upstream_addr":"$upstream_addr",'
                    '"upstream_connect_time":"$upstream_connect_time",'
                    '"upstream_header_time":"$upstream_header_time",'
                    '"upstream_response_time":"$upstream_response_time"'
                    '}';

    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/analytics.log json_analytics;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 50M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Buffer optimizations
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    proxy_buffer_size 8k;
    proxy_buffers 32 8k;
    proxy_busy_buffers_size 16k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self' https://fonts.gstatic.com; manifest-src 'self'; worker-src 'self'; frame-ancestors 'none';" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Map for maintenance mode
    map $uri $maintenance {
        default 0;
        ~^/maintenance 1;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # OCSP stapling
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Upstream configuration with health checks and load balancing
    upstream api_backend {
        least_conn;
        server api_1:8000 max_fails=3 fail_timeout=30s weight=1;
        server api_2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # WebSocket upstream with sticky sessions
    upstream websocket_backend {
        ip_hash;
        server api_1:8000 max_fails=2 fail_timeout=10s;
        server api_2:8000 max_fails=2 fail_timeout=10s;
        keepalive 32;
    }

    # Monitoring upstream
    upstream monitoring {
        server grafana:3000;
        keepalive 8;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Connection limiting
        limit_conn addr 20;

        # Maintenance mode check
        if ($maintenance) {
            return 503;
        }

        # Security: Block common exploit attempts
        location ~* \.(php|asp|aspx|jsp|cgi)$ {
            deny all;
        }

        location ~* /\.(env|htaccess|htpasswd|ssh|svn|git) {
            deny all;
        }

        # Rate limit static assets
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=50 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # CORS for fonts and assets
            add_header Access-Control-Allow-Origin "*";
        }

        # PWA Service Worker
        location /sw.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            expires 0;
        }

        # PWA Manifest
        location /manifest.json {
            add_header Cache-Control "public, max-age=3600";
            expires 1h;
        }

        # API routes with rate limiting and monitoring
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            # Special rate limiting for authentication endpoints
            location ~ ^/api/(auth|login|register)/ {
                limit_req zone=login burst=5 nodelay;
                proxy_pass http://api_backend;
                include /etc/nginx/proxy_params;
            }

            # Health check endpoint (no rate limiting)
            location = /api/health {
                access_log off;
                proxy_pass http://api_backend;
                include /etc/nginx/proxy_params;
            }

            # Metrics endpoint (restricted access)
            location = /api/metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                proxy_pass http://api_backend;
                include /etc/nginx/proxy_params;
            }

            # Default API routing
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }

        # WebSocket routes for real-time features
        location /ws/ {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_connect_timeout 1d;
            proxy_send_timeout 1d;
            proxy_read_timeout 1d;
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;
        }

        # Grafana monitoring (protected)
        location /grafana/ {
            auth_basic "Monitoring Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://monitoring/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Main application (PWA)
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ @fallback;
            
            # Cache static content
            expires 1d;
            add_header Cache-Control "public, immutable";
            
            # Security headers for HTML
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
        }

        # Fallback for SPA routing
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        error_page 429 /429.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location = /404.html {
            root /usr/share/nginx/html;
        }

        location = /429.html {
            root /usr/share/nginx/html;
        }

        # Maintenance page
        location = /maintenance {
            return 503;
        }

        error_page 503 @maintenance;
        location @maintenance {
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /maintenance.html break;
        }
    }

    # Additional server block for API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.${DOMAIN_NAME};

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # CORS headers for API subdomain
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-Key" always;
        add_header Access-Control-Expose-Headers "X-Total-Count, X-Page, X-Per-Page" always;

        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-Key";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type "text/plain";
                add_header Content-Length 0;
                return 204;
            }

            limit_req zone=api burst=50 nodelay;
            proxy_pass http://api_backend/api/;
            include /etc/nginx/proxy_params;
        }
    }
}

# Proxy parameters template
# /etc/nginx/proxy_params
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-Host $server_name;

# Connection settings
proxy_connect_timeout 30s;
proxy_send_timeout 60s;
proxy_read_timeout 60s;

# Buffer settings
proxy_buffering on;
proxy_buffer_size 8k;
proxy_buffers 32 8k;
proxy_busy_buffers_size 16k;

# Cache control
proxy_cache_bypass $http_upgrade;
proxy_no_cache $http_pragma $http_authorization;