{
  "batch_id": "init_batch_021",
  "files": [
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/langchain/__init__.py",
      "current_size_lines": 343,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "    __version__ = metadata.version(__package__)",
        "    __version__ = \"\"",
        "__all__ = ["
      ],
      "estimated_loc_savings": 335,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/asyncpg/__init__.py",
      "current_size_lines": 17,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .connection import connect, Connection  # NOQA",
        "from .exceptions import *  # NOQA",
        "from .pool import create_pool, Pool  # NOQA",
        "from .protocol import Record  # NOQA",
        "from .types import *  # NOQA",
        "from ._version import __version__  # NOQA",
        "from . import exceptions",
        "__all__: tuple[str, ...] = (",
        "__all__ += exceptions.__all__ # NOQA"
      ],
      "estimated_loc_savings": 3,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/httpx_sse/__init__.py",
      "current_size_lines": 12,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from ._api import EventSource, aconnect_sse, connect_sse",
        "from ._exceptions import SSEError",
        "from ._models import ServerSentEvent",
        "__version__ = \"0.4.1\"",
        "__all__ = [",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/redis/__init__.py",
      "current_size_lines": 81,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "    __version__ = metadata.version(\"redis\")",
        "    __version__ = \"99.99.99\"",
        "    VERSION = tuple(map(int_or_str, __version__.split(\".\")))",
        "__all__ = ["
      ],
      "estimated_loc_savings": 72,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/jinja2/__init__.py",
      "current_size_lines": 36,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "from .bccache import BytecodeCache as BytecodeCache",
        "from .bccache import FileSystemBytecodeCache as FileSystemBytecodeCache",
        "from .bccache import MemcachedBytecodeCache as MemcachedBytecodeCache",
        "from .environment import Environment as Environment",
        "from .environment import Template as Template",
        "from .exceptions import TemplateAssertionError as TemplateAssertionError",
        "from .exceptions import TemplateError as TemplateError",
        "from .exceptions import TemplateNotFound as TemplateNotFound",
        "from .exceptions import TemplateRuntimeError as TemplateRuntimeError",
        "from .exceptions import TemplatesNotFound as TemplatesNotFound",
        "from .exceptions import TemplateSyntaxError as TemplateSyntaxError",
        "from .exceptions import UndefinedError as UndefinedError",
        "from .loaders import BaseLoader as BaseLoader",
        "from .loaders import ChoiceLoader as ChoiceLoader",
        "from .loaders import DictLoader as DictLoader",
        "from .loaders import FileSystemLoader as FileSystemLoader",
        "from .loaders import FunctionLoader as FunctionLoader",
        "from .loaders import ModuleLoader as ModuleLoader",
        "from .loaders import PackageLoader as PackageLoader",
        "from .loaders import PrefixLoader as PrefixLoader",
        "from .runtime import ChainableUndefined as ChainableUndefined",
        "from .runtime import DebugUndefined as DebugUndefined",
        "from .runtime import make_logging_undefined as make_logging_undefined",
        "from .runtime import StrictUndefined as StrictUndefined",
        "from .runtime import Undefined as Undefined",
        "from .utils import clear_caches as clear_caches",
        "from .utils import is_undefined as is_undefined",
        "from .utils import pass_context as pass_context",
        "from .utils import pass_environment as pass_environment",
        "from .utils import pass_eval_context as pass_eval_context",
        "from .utils import select_autoescape as select_autoescape",
        "__version__ = \"3.1.6\""
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/cryptography/__init__.py",
      "current_size_lines": 21,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from cryptography.__about__ import __author__, __copyright__, __version__",
        "__all__ = [",
        "    \"__author__\",",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 12,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/distro/__init__.py",
      "current_size_lines": 52,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .distro import (",
        "    __version__,",
        "__all__ = [",
        "__version__ = __version__"
      ],
      "estimated_loc_savings": 43,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/vine/__init__.py",
      "current_size_lines": 37,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .abstract import Thenable",
        "from .funtools import (",
        "from .promises import promise",
        "from .synchronization import barrier",
        "__version__ = '5.1.0'",
        "__author__ = 'Ask Solem'",
        "    r'(\\d+)\\.(\\d+).(\\d+)(.+)?', __version__).groups()",
        "__all__ = ["
      ],
      "estimated_loc_savings": 24,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/IPython/__init__.py",
      "current_size_lines": 118,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .core.getipython import get_ipython",
        "from .core import release",
        "from .core.application import Application",
        "from .terminal.embed import embed",
        "from .core.interactiveshell import InteractiveShell",
        "from .utils.sysinfo import sys_info",
        "from .utils.frame import extract_module_locals",
        "__all__ = [\"start_ipython\", \"embed\", \"embed_kernel\"]",
        "__author__ = '%s <%s>' % (release.author, release.author_email)",
        "__version__  = release.version"
      ],
      "estimated_loc_savings": 103,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/frozenlist/__init__.py",
      "current_size_lines": 62,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "__version__ = \"1.7.0\"",
        "__all__ = (\"FrozenList\", \"PyFrozenList\")  # type: Tuple[str, ...]",
        "        from ._frozenlist import FrozenList as CFrozenList  # type: ignore"
      ],
      "estimated_loc_savings": 54,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/argcomplete/__init__.py",
      "current_size_lines": 11,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [
        "from . import completers",
        "from .completers import ChoicesCompleter, DirectoriesCompleter, EnvironCompleter, FilesCompleter, SuppressCompleter",
        "from .exceptions import ArgcompleteException",
        "from .finders import CompletionFinder, ExclusiveCompletionFinder, safe_actions",
        "from .io import debug, mute_stderr, warn",
        "from .lexers import split_line",
        "from .shell_integration import shellcode"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/tree_sitter_javascript/__init__.py",
      "current_size_lines": 29,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from ._binding import language",
        "__all__ = [",
        "    return sorted(__all__ + [",
        "        \"__all__\", \"__builtins__\", \"__cached__\", \"__doc__\", \"__file__\","
      ],
      "estimated_loc_savings": 20,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/fsspec/__init__.py",
      "current_size_lines": 66,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from . import caching",
        "from ._version import __version__  # noqa: F401",
        "from .callbacks import Callback",
        "from .compression import available_compressions",
        "from .core import get_fs_token_paths, open, open_files, open_local, url_to_fs",
        "from .exceptions import FSTimeoutError",
        "from .mapping import FSMap, get_mapper",
        "from .registry import (",
        "from .spec import AbstractFileSystem",
        "__all__ = ["
      ],
      "estimated_loc_savings": 51,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/libtmux/__init__.py",
      "current_size_lines": 30,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .__about__ import (",
        "    __author__,",
        "    __email__,",
        "    __version__,",
        "from .pane import Pane",
        "from .server import Server",
        "from .session import Session",
        "from .window import Window",
        "__all__ = (",
        "    \"__author__\",",
        "    \"__email__\",",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 13,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/bcrypt/__init__.py",
      "current_size_lines": 41,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from ._bcrypt import (",
        "    __author__,",
        "    __email__,",
        "from ._bcrypt import (",
        "    __version_ex__ as __version__,",
        "__all__ = [",
        "    \"__author__\",",
        "    \"__email__\",",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 27,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/markdown/__init__.py",
      "current_size_lines": 37,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .core import Markdown, markdown, markdownFromFile",
        "from .__meta__ import __version__, __version_info__  # noqa",
        "from .extensions import Extension  # noqa",
        "__all__ = ['Markdown', 'markdown', 'markdownFromFile']"
      ],
      "estimated_loc_savings": 28,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pytest_benchmark/__init__.py",
      "current_size_lines": 1,
      "has_imports": false,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = '5.1.0'"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pgvector/__init__.py",
      "current_size_lines": 10,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .bit import Bit",
        "from .halfvec import HalfVector",
        "from .sparsevec import SparseVector",
        "from .vector import Vector",
        "__all__ = ["
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pre_commit/__init__.py",
      "current_size_lines": 0,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/fastapi_cloud_cli/__init__.py",
      "current_size_lines": 1,
      "has_imports": false,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = \"0.1.5\""
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/colorama/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "from .initialise import init, deinit, reinit, colorama_text, just_fix_windows_console",
        "from .ansi import Fore, Back, Style, Cursor",
        "from .ansitowin32 import AnsiToWin32",
        "__version__ = '0.4.6'"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/cffi/__init__.py",
      "current_size_lines": 11,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "__all__ = ['FFI', 'VerificationError', 'VerificationMissing', 'CDefError',",
        "from .api import FFI",
        "from .error import CDefError, FFIError, VerificationError, VerificationMissing",
        "from .error import PkgConfigError",
        "__version__ = \"1.17.1\""
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/starlette/__init__.py",
      "current_size_lines": 1,
      "has_imports": false,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = \"0.47.2\""
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/tzdata/__init__.py",
      "current_size_lines": 5,
      "has_imports": false,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = \"2025.2\""
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/rsa/__init__.py",
      "current_size_lines": 52,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "__author__ = \"Sybren Stuvel, Barry Mead and Yesudeep Mangalapilly\"",
        "__version__ = \"4.9.1\"",
        "__all__ = ["
      ],
      "estimated_loc_savings": 44,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/executing/__init__.py",
      "current_size_lines": 21,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .executing import Source, Executing, only, NotOneValueFound, cache, future_flags",
        "from ._pytest_utils import is_pytest_compatible",
        "    from .version import __version__ # type: ignore[import]",
        "    if \"dev\" in __version__:",
        "    __version__ = \"???\"",
        "    __version_info__ = _VersionInfo(*map(int, __version__.split('.')))",
        "__all__ = [\"Source\",\"is_pytest_compatible\"]"
      ],
      "estimated_loc_savings": 9,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pathspec/__init__.py",
      "current_size_lines": 60,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .gitignore import (",
        "from .pathspec import (",
        "from .pattern import (",
        "from .util import (",
        "from ._meta import (",
        "\t__author__,",
        "\t__version__,",
        "from . import patterns",
        "from .patterns.gitwildmatch import GitIgnorePattern",
        "__all__ = [",
        "\t'__author__',",
        "\t'__version__',"
      ],
      "estimated_loc_savings": 43,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/_griffe/__init__.py",
      "current_size_lines": 2,
      "has_imports": false,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/matplotlib_inline/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "from . import backend_inline, config  # noqa",
        "__version__ = \"0.1.7\"  # noqa"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pytest_mock/__init__.py",
      "current_size_lines": 26,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = ["
      ],
      "estimated_loc_savings": 20,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/xdist/__init__.py",
      "current_size_lines": 12,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from xdist._version import version as __version__",
        "__all__ = [",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 4,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/ipdb/__init__.py",
      "current_size_lines": 9,
      "has_imports": true,
      "has_version": false,
      "has_all": false,
      "preserved_content": [],
      "estimated_loc_savings": 4,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/jedi/__init__.py",
      "current_size_lines": 36,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = '0.19.2'"
      ],
      "estimated_loc_savings": 30,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/hiredis/__init__.py",
      "current_size_lines": 10,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from hiredis.version import __version__",
        "__all__ = [",
        "  \"__version__\"]"
      ],
      "estimated_loc_savings": 2,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/idna/__init__.py",
      "current_size_lines": 44,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .core import (",
        "from .intranges import intranges_contain",
        "from .package_data import __version__",
        "__all__ = [",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 34,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/importlib_metadata/__init__.py",
      "current_size_lines": 946,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from . import _meta",
        "from ._collections import FreezableDefaultDict, Pair",
        "from ._compat import (",
        "from ._functools import method_cache, pass_none",
        "from ._itertools import always_iterable, bucket, unique_everseen",
        "from ._meta import PackageMetadata, SimplePath",
        "from ._typing import md_none",
        "from .compat import py39, py311",
        "__all__ = [",
        "        from . import _adapters"
      ],
      "estimated_loc_savings": 931,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/sentry_sdk/__init__.py",
      "current_size_lines": 56,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = [  # noqa"
      ],
      "estimated_loc_savings": 50,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/wheel/__init__.py",
      "current_size_lines": 2,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = \"0.45.1\""
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/click/__init__.py",
      "current_size_lines": 73,
      "has_imports": true,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "from .core import Argument as Argument",
        "from .core import BaseCommand as BaseCommand",
        "from .core import Command as Command",
        "from .core import CommandCollection as CommandCollection",
        "from .core import Context as Context",
        "from .core import Group as Group",
        "from .core import MultiCommand as MultiCommand",
        "from .core import Option as Option",
        "from .core import Parameter as Parameter",
        "from .decorators import argument as argument",
        "from .decorators import command as command",
        "from .decorators import confirmation_option as confirmation_option",
        "from .decorators import group as group",
        "from .decorators import help_option as help_option",
        "from .decorators import HelpOption as HelpOption",
        "from .decorators import make_pass_decorator as make_pass_decorator",
        "from .decorators import option as option",
        "from .decorators import pass_context as pass_context",
        "from .decorators import pass_obj as pass_obj",
        "from .decorators import password_option as password_option",
        "from .decorators import version_option as version_option",
        "from .exceptions import Abort as Abort",
        "from .exceptions import BadArgumentUsage as BadArgumentUsage",
        "from .exceptions import BadOptionUsage as BadOptionUsage",
        "from .exceptions import BadParameter as BadParameter",
        "from .exceptions import ClickException as ClickException",
        "from .exceptions import FileError as FileError",
        "from .exceptions import MissingParameter as MissingParameter",
        "from .exceptions import NoSuchOption as NoSuchOption",
        "from .exceptions import UsageError as UsageError",
        "from .formatting import HelpFormatter as HelpFormatter",
        "from .formatting import wrap_text as wrap_text",
        "from .globals import get_current_context as get_current_context",
        "from .parser import OptionParser as OptionParser",
        "from .termui import clear as clear",
        "from .termui import confirm as confirm",
        "from .termui import echo_via_pager as echo_via_pager",
        "from .termui import edit as edit",
        "from .termui import getchar as getchar",
        "from .termui import launch as launch",
        "from .termui import pause as pause",
        "from .termui import progressbar as progressbar",
        "from .termui import prompt as prompt",
        "from .termui import secho as secho",
        "from .termui import style as style",
        "from .termui import unstyle as unstyle",
        "from .types import BOOL as BOOL",
        "from .types import Choice as Choice",
        "from .types import DateTime as DateTime",
        "from .types import File as File",
        "from .types import FLOAT as FLOAT",
        "from .types import FloatRange as FloatRange",
        "from .types import INT as INT",
        "from .types import IntRange as IntRange",
        "from .types import ParamType as ParamType",
        "from .types import Path as Path",
        "from .types import STRING as STRING",
        "from .types import Tuple as Tuple",
        "from .types import UNPROCESSED as UNPROCESSED",
        "from .types import UUID as UUID",
        "from .utils import echo as echo",
        "from .utils import format_filename as format_filename",
        "from .utils import get_app_dir as get_app_dir",
        "from .utils import get_binary_stream as get_binary_stream",
        "from .utils import get_text_stream as get_text_stream",
        "from .utils import open_file as open_file",
        "__version__ = \"8.1.8\""
      ],
      "estimated_loc_savings": 1,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/requests_toolbelt/__init__.py",
      "current_size_lines": 29,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .adapters import SSLAdapter, SourceAddressAdapter",
        "from .auth.guess import GuessAuth",
        "from .multipart import (",
        "from .streaming_iterator import StreamingIterator",
        "from .utils.user_agent import user_agent",
        "__version__ = '1.0.0'",
        "__version_info__ = tuple(int(i) for i in __version__.split('.'))",
        "__all__ = [",
        "    '__license__', '__copyright__', '__version__', '__version_info__',"
      ],
      "estimated_loc_savings": 15,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/tenacity/__init__.py",
      "current_size_lines": 598,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from . import _utils",
        "from .retry import retry_base  # noqa",
        "from .retry import retry_all  # noqa",
        "from .retry import retry_always  # noqa",
        "from .retry import retry_any  # noqa",
        "from .retry import retry_if_exception  # noqa",
        "from .retry import retry_if_exception_type  # noqa",
        "from .retry import retry_if_exception_cause_type  # noqa",
        "from .retry import retry_if_not_exception_type  # noqa",
        "from .retry import retry_if_not_result  # noqa",
        "from .retry import retry_if_result  # noqa",
        "from .retry import retry_never  # noqa",
        "from .retry import retry_unless_exception_type  # noqa",
        "from .retry import retry_if_exception_message  # noqa",
        "from .retry import retry_if_not_exception_message  # noqa",
        "from .nap import sleep  # noqa",
        "from .nap import sleep_using_event  # noqa",
        "from .stop import stop_after_attempt  # noqa",
        "from .stop import stop_after_delay  # noqa",
        "from .stop import stop_before_delay  # noqa",
        "from .stop import stop_all  # noqa",
        "from .stop import stop_any  # noqa",
        "from .stop import stop_never  # noqa",
        "from .stop import stop_when_event_set  # noqa",
        "from .wait import wait_chain  # noqa",
        "from .wait import wait_combine  # noqa",
        "from .wait import wait_exponential  # noqa",
        "from .wait import wait_fixed  # noqa",
        "from .wait import wait_incrementing  # noqa",
        "from .wait import wait_none  # noqa",
        "from .wait import wait_random  # noqa",
        "from .wait import wait_random_exponential  # noqa",
        "from .wait import wait_random_exponential as wait_full_jitter  # noqa",
        "from .wait import wait_exponential_jitter  # noqa",
        "from .before import before_log  # noqa",
        "from .before import before_nothing  # noqa",
        "from .after import after_log  # noqa",
        "from .after import after_nothing  # noqa",
        "from .before_sleep import before_sleep_log  # noqa",
        "from .before_sleep import before_sleep_nothing  # noqa",
        "    from . import asyncio as tasyncio",
        "    from .retry import RetryBaseT",
        "    from .stop import StopBaseT",
        "    from .wait import WaitBaseT",
        "__all__ = ["
      ],
      "estimated_loc_savings": 548,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/torch/__init__.py",
      "current_size_lines": 2266,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "    from .types import Device, IntLikeType",
        "    __version__ = \"torch-deploy-1.8\"",
        "    from torch.torch_version import __version__ as __version__",
        "__all__ = [",
        "assert __all__ == sorted(__all__)",
        "    from . import _rocm_init  # type: ignore[attr-defined]",
        "__all__.append(\"sym_sqrt\")",
        "        __all__.append(__name)",
        "__all__.extend([\"e\", \"pi\", \"nan\", \"inf\", \"newaxis\"])",
        "        __all__.append(__name)",
        "__all__.extend("
      ],
      "estimated_loc_savings": 2250,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/amqp/__init__.py",
      "current_size_lines": 68,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "__version__ = '5.3.1'",
        "__author__ = 'Barry Pederson'",
        "    r'(\\d+)\\.(\\d+).(\\d+)(.+)?', __version__).groups()",
        "from .basic_message import Message  # noqa",
        "from .channel import Channel  # noqa",
        "from .connection import Connection  # noqa",
        "from .exceptions import (AccessRefused, AMQPError,  # noqa",
        "from .utils import promise  # noqa",
        "__all__ = ("
      ],
      "estimated_loc_savings": 54,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/zipp/__init__.py",
      "current_size_lines": 355,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from ._functools import save_method_args",
        "from .compat.py310 import text_encoding",
        "from .glob import Translator",
        "__all__ = ['Path']"
      ],
      "estimated_loc_savings": 346,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/websockets/__init__.py",
      "current_size_lines": 231,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "from .imports import lazy_import",
        "from .version import version as __version__  # noqa: F401",
        "__all__ = [",
        "    from .asyncio.client import ClientConnection, connect, unix_connect",
        "    from .asyncio.router import Router, route, unix_route",
        "    from .asyncio.server import (",
        "    from .client import ClientProtocol",
        "    from .datastructures import Headers, HeadersLike, MultipleValuesError",
        "    from .exceptions import (",
        "    from .frames import Close, CloseCode, Frame, Opcode",
        "    from .http11 import Request, Response",
        "    from .protocol import Protocol, Side, State",
        "    from .server import ServerProtocol",
        "    from .typing import ("
      ],
      "estimated_loc_savings": 212,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/faker/__init__.py",
      "current_size_lines": 5,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "__all__ = (\"Factory\", \"Generator\", \"Faker\")"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/pytz/__init__.py",
      "current_size_lines": 1436,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        "__version__ = VERSION",
        "__all__ = ["
      ],
      "estimated_loc_savings": 1429,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/filelock/__init__.py",
      "current_size_lines": 41,
      "has_imports": true,
      "has_version": true,
      "has_all": true,
      "preserved_content": [
        ".. autodata:: filelock.__version__",
        "from ._api import AcquireReturnProxy, BaseFileLock",
        "from ._error import Timeout",
        "from ._soft import SoftFileLock",
        "from ._unix import UnixFileLock, has_fcntl",
        "from ._windows import WindowsFileLock",
        "from .version import version",
        "__version__: str = version",
        "__all__ = [",
        "    \"__version__\","
      ],
      "estimated_loc_savings": 26,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/jiter/__init__.py",
      "current_size_lines": 4,
      "has_imports": true,
      "has_version": false,
      "has_all": true,
      "preserved_content": [
        "from .jiter import *",
        "if hasattr(jiter, \"__all__\"):",
        "    __all__ = jiter.__all__"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    },
    {
      "file_path": "/Users/bogdan/work/leanvibe-dev/bee-hive/venv/lib/python3.12/site-packages/gunicorn/__init__.py",
      "current_size_lines": 7,
      "has_imports": false,
      "has_version": true,
      "has_all": false,
      "preserved_content": [
        "__version__ = \".\".join([str(v) for v in version_info])",
        "SERVER_SOFTWARE = \"%s/%s\" % (SERVER, __version__)"
      ],
      "estimated_loc_savings": 0,
      "requires_standardization": true
    }
  ],
  "estimated_loc_savings": 6839,
  "file_count": 50
}